[
  {
    "Id": "285586",
    "ThreadId": "83092",
    "Html": "<p>exception raised at third line:</p>\r\n<p>&nbsp;</p>\r\n<pre>var gL = new GraphLayout&lt;object,IEdge&lt;object&gt;,IBidirectionalGraph&lt;object,IEdge&lt;object&gt;&gt;&gt;();<br>gL.LayoutAlgorithmType = &quot;FR&quot;;\r\ngL.OverlapRemovalAlgorithmType = &quot;FSA&quot;;\r\ngL.HighlightAlgorithmType = &quot;Simple&quot;;</pre>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>System.ArgumentOutOfRangeException was unhandled<br>&nbsp; Message=&quot;Index was out of range. Must be non-negative and less than the size of the collection.\\r\\nParameter name: index&quot;<br>&nbsp; Source=&quot;mscorlib&quot;<br>&nbsp; ParamName=&quot;index&quot;<br>&nbsp; StackTrace:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at System.ThrowHelper.ThrowArgumentOutOfRangeException(ExceptionArgument argument, ExceptionResource resource)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at System.ThrowHelper.ThrowArgumentOutOfRangeException()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at System.Collections.Generic.List`1.get_Item(Int32 index)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at GraphSharp.Controls.GraphLayout`3.ChangeState(Int32 stateIndex)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at GraphSharp.Controls.GraphLayout`3.RecalculateOverlapRemoval()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at GraphSharp.Controls.GraphLayout`3.OverlapRemovalAlgorithmType_PropertyChanged(DependencyObject obj, DependencyPropertyChangedEventArgs e)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at System.Windows.DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs e)<br>...</p>",
    "PostedDate": "2010-02-03T18:32:47.483-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "362726",
    "ThreadId": "83092",
    "Html": "<p>Yes, I see the same issue, even when using OverlapRemovalAlgorithmType in XAML, as per the tutorial example.</p>",
    "PostedDate": "2010-02-22T09:27:52.23-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "362809",
    "ThreadId": "83092",
    "Html": "<p>Incidentally, my workaround for this was to wrap this assignment with a try...catch and ignore the exception.&nbsp; So far, I've been able to get away with that, but I don't know what I'm missing out on algorithmically.&nbsp; :)</p>",
    "PostedDate": "2010-02-22T12:38:10.35-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "362819",
    "ThreadId": "83092",
    "Html": "<p>With this issue, are you using the downloadable binaries of graph# or are have you compiled the latest src?</p>",
    "PostedDate": "2010-02-22T12:56:18.967-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "362821",
    "ThreadId": "83092",
    "Html": "<p>I downloaded from SVN yesterday and tried and got the same results.</p>",
    "PostedDate": "2010-02-22T12:58:34.307-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "363105",
    "ThreadId": "83092",
    "Html": "<p>Please, opne a ticket in the issue traker of the project.</p>\r\n<p>&nbsp;</p>\r\n<p>Thank you</p>\r\n<p>&nbsp;</p>\r\n<p>BADANG</p>",
    "PostedDate": "2010-02-23T03:25:12.553-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]