[
  {
    "Id": "241332",
    "ThreadId": "70832",
    "Html": "<p><span style=\"font-size:small\">\r\n<p><span>I want to be able to set a tool tip on each edge, where the contents of the tool tip is defined by a non-element property of the edge's target vertex.&nbsp; I started by defining something like this:<br></span></p>\r\n</span></p>\r\n<p><span style=\"font-size:small\">\r\n<p><span>&lt;Style TargetType=&quot;{x:Type graphsharp:EdgeControl}&quot;&gt;<br>&nbsp;&nbsp;&nbsp; &lt;Setter Property=&quot;ToolTip&quot;&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Setter.Value&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;StackPanel&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;ListView ItemsSource=&quot;...&quot;&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/ListView&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/StackPanel&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/Setter.Value&gt;<br>&nbsp;&nbsp;&nbsp; &lt;/Setter&gt;<br>&nbsp;&nbsp;&nbsp; ...<br>&nbsp; &lt;/Style&gt;<br></span></p>\r\n</span></p>\r\n<p><span>This works if the tool tip contains something simple, like a string.&nbsp; However, I couldn't figure out how to set up a data context/binding to populate the list view from the target vertex's properties.&nbsp; I eventually gave up and duplicated the template code for the EdgeControl, so I now have something like this:</span>&nbsp;</p>\r\n<p>\r\n<p>&nbsp; &lt;Style TargetType=&quot;{x:Type graphsharp:EdgeControl}&quot;&gt;<br>&nbsp;&nbsp;&nbsp; &lt;Setter Property=&quot;Template&quot;&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Setter.Value&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;ControlTemplate TargetType=&quot;{x:Type graphsharp:EdgeControl}&quot;&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Path ...&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Path.ToolTip&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;StackPanel&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;ListView ItemsSource=&quot;{Binding Path=Target.Vertex.MyProperty, <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RelativeSource={RelativeSource TemplatedParent}}&quot;&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/ListView&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/StackPanel&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/Path.ToolTip&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/Path&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/ControlTemplate&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/Setter.Value&gt;<br>&nbsp;&nbsp;&nbsp; &lt;/Setter&gt;<br>&nbsp; &lt;/Style&gt;</p>\r\n<p>This displays the required tool tip.&nbsp; However, apart&nbsp;from the obvious downside of duplicating&nbsp;the template code, it also seems to cache the result.&nbsp; So when the property of the destination vertex that provides the data for the tool tip is altered the tooltip still shows the old result.&nbsp; But if I set&nbsp;a tool tip on the custom target vertex itself that's connected to the same property it shows the new result.&nbsp; Anyone have any idea as to why the value is not changing?</p>\r\n<p>Of course ideally it would make more sense to store the data driving the tool tip in the edge, rather than the target vertex, as there may be multiple edges to the target, each one needing it's own data.&nbsp; But although I could build my graph using a custom edge class, derived from IEdge, it's unclear to me what XAML I need to write to tie this into Graph#.&nbsp; For custom vertices I just define a data template for the class, but edges are more complex, with their paths etc.&nbsp; Has anyone managed to use Graph# with custom edge classes, and if so what does the XAML look like?</p>\r\n<p>Thanks,</p>\r\n<p>Kevin</p>\r\n<p><span style=\"font-size:small\"><span>&nbsp;</span></span></p>\r\n</p>\r\n<p><span><span id=\"_marker\">&nbsp;</span></span></p>",
    "PostedDate": "2009-10-02T08:32:18.187-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "241635",
    "ThreadId": "70832",
    "Html": "<p>I'll answer the final part of the question myself... Suppose you define your own vertex class, MyVertex, and the corresponding edge class, MyEdge:Edge&lt;MyVertex&gt;. &nbsp;You then define a custom graph class MyGraph:BidirectionalGraph&lt;MyVertex, MyEdge&gt; &nbsp;When you try to use these classes you find that no graph appears. &nbsp;The bit I was missing was that you also need to define class</p>\r\n<p>MyGraphLayout : GraphSharp.Controls.GraphLayout&lt;MyVertex, MyEdge, MyGraph&gt;</p>\r\n<p>and update the XAML so that it uses the MyGraphLayout element, instead of GraphLayout, to instantiate the graph view. &nbsp; The library desperately needs some documentation, or at the very least an FAQ, to avoid such frustrations :-(</p>",
    "PostedDate": "2009-10-03T05:48:49.253-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "242362",
    "ThreadId": "70832",
    "Html": "<p>Kevin, the answer to your first question (how to get the ToolTip change to appear when using just the style setters) is the following:</p>\r\n<p>1) the edge control template should be modified to use ToolTip from a template binding on the path.&nbsp; In other words, it should have a Path.ToolTip property set to a {TemplateBinding ToolTip}.&nbsp; This is an oversight in the implementation of the control template, so it makes sense that the control template needs to change - this is not something that each user should have to change - it should be changed in the 'stock' templates.</p>\r\n<p>2) your style will then be able to set ToolTip on the EdgeControl and have it passed down by virtue of (1) to the Path.&nbsp; This means for your own customization (adding tooltip values) you can do so in the &quot;regular&quot; style template without having to replace the control templates.</p>\r\n<p>3) if your binding is not updating after changes to your property, it's likely you aren't implementing INotifyPropertyChanged properly,&nbsp;and you aren't using a DependencyObject/DepedencyProperty for your source object/property.&nbsp; You should raise PropertyChanged when changing the value of your property on your Edge class, when the property is changed by whatever is making the change.&nbsp; This will notify the binding to refresh the tooltip.&nbsp; I don't know if refreshes occur during the tooltip showing, so if you need that, you may need some &quot;magic&quot;.</p>",
    "PostedDate": "2009-10-05T17:52:05.173-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "242586",
    "ThreadId": "70832",
    "Html": "<p>Thanks for the reply Kelly.&nbsp; I think I understand the first part of your suggestion; I modified my copied version of the EdgeControl template to set the tool tip to {TemplateBinding ToolTip} instead of my custom tooltip, and hopefully I'll be able to strip out this copy when Graph# gets updated.&nbsp; But I'm not sure what to write for the second part of your suggestion.&nbsp; If I define</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre>    <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Style</span> <span style=\"color:Red\">TargetType</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{x:Type graphsharp:EdgeControl}</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n      <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Setter</span> <span style=\"color:Red\">Property</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">ToolTip</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n        <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Setter.Value</span><span style=\"color:Blue\">&gt;</span>\r\n          ...\r\n        <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Setter.Value</span><span style=\"color:Blue\">&gt;</span>\r\n      <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Setter</span><span style=\"color:Blue\">&gt;</span>\r\n    <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Style</span><span style=\"color:Blue\">&gt;</span></pre>\r\n</div>\r\n<div style=\"color:Black;background-color:White\">then the system generates an XamlParseException complaining about a duplicate key.&nbsp; I think I'm reaching (or passed) the limits of my current XAML knowledge :-(</div>",
    "PostedDate": "2009-10-06T08:37:59.803-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "242624",
    "ThreadId": "70832",
    "Html": "<p>Kevin, the only way this should be giving a duplicate resource exception (if I understand correctly)&nbsp;is if you have two of these styles in the same resource dictionary.&nbsp; Are you using a merged dictionary, or a dictionary that you copied from the sample project?&nbsp; If so, you should probably just modify that style to add the setter as appropriate in there.&nbsp; If you want to keep those as &quot;stock&quot; styles that you customize, you need to add your customizations at a lower (deeper child) level in the logical tree.&nbsp; For instance, in Window.Resources (but don't merge the resource dictionary if you're doing so).</p>\r\n<p>You definitely won't be able to put both styles in the same resource dictionary (whether merged or inline).</p>",
    "PostedDate": "2009-10-06T10:34:04.133-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "242667",
    "ThreadId": "70832",
    "Html": "<p>Thanks Kelly, now you mention it I remember reading about this stuff. &nbsp;I'll go back and look at my WPF book. &nbsp;Thanks for your help.</p>\r\n<p>Kevin</p>",
    "PostedDate": "2009-10-06T12:11:01.393-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "242860",
    "ThreadId": "70832",
    "Html": "<p>Nearly there...&nbsp; Rather than modifying and rebuilding Graph# I moved the modified version of the edge control template to the application xaml file and kept the tooltip style setter in the main window xaml file.&nbsp; This fixed the duplicate resource exception, as you had predicted.&nbsp; So now if the tool tip is a simple string I can just define something like this:</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Style</span> <span style=\"color:Red\">TargetType</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{x:Type graphsharp:EdgeControl}</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n  <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Setter</span> <span style=\"color:Red\">Property</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">ToolTip</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n    <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Setter.Value</span><span style=\"color:Blue\">&gt;</span>...<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Setter.Value</span><span style=\"color:Blue\">&gt;</span>\r\n  <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Setter</span><span style=\"color:Blue\">&gt;</span>\r\n<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Style</span><span style=\"color:Blue\">&gt;</span>\r\n</pre>\r\n</div>\r\n<p>That works fine.&nbsp; However, if I want a slightly more ambitious tooltip, e.g.&nbsp;a list in a stack panel populated by a&nbsp;collection property in my edge class, I can't just write something like this:</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Style</span> <span style=\"color:Red\">TargetType</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{x:Type graphsharp:EdgeControl}</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n  <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Setter</span> <span style=\"color:Red\">Property</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">ToolTip</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n    <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Setter.Value</span><span style=\"color:Blue\">&gt;</span>\r\n      <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">StackPanel</span><span style=\"color:Blue\">&gt;</span>\r\n        <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">ListView</span> <span style=\"color:Red\">ItemsSource</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Path=Edge.MyList}</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n          ...\r\n        <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">ListView</span><span style=\"color:Blue\">&gt;</span>\r\n      <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">StackPanel</span><span style=\"color:Blue\">&gt;</span>\r\n    <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Setter.Value</span><span style=\"color:Blue\">&gt;</span>\r\n  <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Setter</span><span style=\"color:Blue\">&gt;</span>\r\n<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Style</span><span style=\"color:Blue\">&gt;</span>\r\n\r\n</pre>\r\n</div>\r\n<p>as you get a Xaml parse exception.&nbsp; I can get around this by putting the stack panel in a resource, and then referencing it in the setter, as in</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">StackPanel</span> <span style=\"color:Red\">x:Key</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">EdgeToolTip</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n  ...\r\n<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">StackPanel</span><span style=\"color:Blue\">&gt;</span>\r\n\r\n<span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Style</span> <span style=\"color:Red\">TargetType</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{x:Type graphsharp:EdgeControl}</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n  <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Setter</span> <span style=\"color:Red\">Property</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">ToolTip</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Value</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{StaticResource EdgeToolTip}</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">/&gt;</span>\r\n<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Style</span><span style=\"color:Blue\">&gt;</span>\r\n\r\n</pre>\r\n</div>\r\n<p>However, I can't figure out how to set the ItemsSource attribute to&nbsp;pick up&nbsp;the edge property list.&nbsp; As with most&nbsp;problems in&nbsp;WPF, there's probably a one line bit of magic I'm missing somewhere.&nbsp; Suggestions would be appreciated.</p>\r\n<p>Kevin</p>",
    "PostedDate": "2009-10-07T01:54:19.88-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "242866",
    "ThreadId": "70832",
    "Html": "<p>Kevin, what's the XamlParseException that you get when trying the Setter.Value with StackPanel in it.&nbsp; I see no reason why that shouldn't work.&nbsp; BTW, I just checked in a change that allows you to use bindings that refer to the Edge or Vertex properties using simple binding syntax.&nbsp; Currently, the binding stuff would refer to the Graph object, not the Vertex or Edge objects, since DataContext was not being set on the VertexControl and EdgeControl.&nbsp; The latest source (revision 31550 or later) should contain this fix, and allow you to use &quot;normal&quot; binding syntax.&nbsp; With my fix, you would just bind to {Binding MyList}, not {Binding Edge.MyList}.&nbsp; If you wanted to go through the &quot;Edge&quot; property, you need to use the templated source (i.e. {Binding Edge.MyList, RelativeSource={RelativeSource TemplatedParent}} instead of the simple Binding, since the simple binding looks in the DataContext for it's source).</p>",
    "PostedDate": "2009-10-07T02:03:00.49-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "242877",
    "ThreadId": "70832",
    "Html": "<p>The error you get is &quot;Cannot add content of type 'System.Windows.Controls.StackPanel' to an object of type 'System.Object'&quot;.&nbsp; It sounds like it's a known problem, with the use of a resource the suggested fix.&nbsp; It's just getting the binding set up correctly that's causing the problem.&nbsp; I'll try using the revision you suggested to see if I can get further.</p>",
    "PostedDate": "2009-10-07T02:19:29.303-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "242882",
    "ThreadId": "70832",
    "Html": "<p>Kevin, check out revision 31556, specifically the Graph#.Sample/MainWindow.xaml file (line 316)&nbsp;and the resource that I've added to the graph layout tag.&nbsp; You should be able to see how to do a binding from this example (using the inline resource, like you found is necessary for ToolTip's (I never knew that was necessary)).&nbsp; In order to get yours to work, you should be able to just replace my TextBlock with your ListView and have it work.&nbsp; If that doesn't work, you might try a simpler ItemsControl type, so that interactivity is not involved.&nbsp; I remember reading that there are some weird things about interactive controls being in tooltips.</p>\r\n<p>I also pushed the ToolTip support code into the Poc GraphVertex and GraphEdge templates.&nbsp; I didn't push them into the stock templates, but if you're using them and you'd like me to, I can.&nbsp; I just figured nobody is using the stock ones, so I didn't bother unless someone asks for it.</p>",
    "PostedDate": "2009-10-07T02:47:44.563-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "242885",
    "ThreadId": "70832",
    "Html": "<p>Actually, I went ahead and pushed the changes down to the core templates.&nbsp; That way if you're using the templates in GraphSharp.Controls.dll, you will get the ToolTip support (i.e. you just need a style to set ToolTip on the Vertex / Edge, and it will be pulled down to the appropriate place in the logical tree).</p>\r\n<p>Kelly</p>",
    "PostedDate": "2009-10-07T02:55:51.83-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "242927",
    "ThreadId": "70832",
    "Html": "<p>Excellent.&nbsp; Your 31556 build, together with ItemsSource set to &quot;(Binding Path=MyListProperty}&quot;, worked&nbsp;fine.&nbsp; Thanks for all your help Kelly.</p>\r\n<p>Kevin&nbsp;</p>",
    "PostedDate": "2009-10-07T05:33:10.04-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "242989",
    "ThreadId": "70832",
    "Html": "<p>On a related note, suppose I wanted to use a data trigger to alter a property of an edge, e.g. it's stroke thickness.&nbsp; I started by defining the following:</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Style</span> <span style=\"color:Red\">TargetType</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{x:Type graphsharp:EdgeControl}</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n  <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Setter</span> <span style=\"color:Red\">Property</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">ToolTip</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Value</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{StaticResource EdgeToolTipContent}</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">/&gt;</span>\r\n  <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Setter</span> <span style=\"color:Red\">Property</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">ContextMenu</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Value</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{StaticResource EdgeContextMenu}</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">/&gt;</span>\r\n  <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Style.Triggers</span><span style=\"color:Blue\">&gt;</span>\r\n    <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">DataTrigger</span> <span style=\"color:Red\">Binding</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Path=Active}</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Value</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">True</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n      <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Setter</span> <span style=\"color:Red\">Property</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">???StrokeThickness???</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Value</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">4</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span><span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Setter</span><span style=\"color:Blue\">&gt;</span>\r\n    <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">DataTrigger</span><span style=\"color:Blue\">&gt;</span>\r\n  <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Style.Triggers</span><span style=\"color:Blue\">&gt;</span>\r\n<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Style</span><span style=\"color:Blue\">&gt;</span>\r\n\r\n</pre>\r\n</div>\r\n<p>However, it's not clear to me how to refer to the StrokeThickness property of the path making up the edge in the setter element.&nbsp; I've tried various specifying various things for the property, e.g. Path.StrokeThickness, and none of them seem to alter the thickness.</p>",
    "PostedDate": "2009-10-07T08:24:12.983-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "243087",
    "ThreadId": "70832",
    "Html": "<p>You can probably use the TargetName property of Setter, and use the TargetName of your &quot;path&quot; element, but the better approach would be for us to add a DP on EdgeControl to allow you to 'pass on' these values just like what we did with ToolTip.&nbsp; I'll work on that over lunch.</p>",
    "PostedDate": "2009-10-07T12:16:21.517-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "243096",
    "ThreadId": "70832",
    "Html": "<p>Hmm... I don't know what's going on, but no matter what I change the stroke thickness in the path to, it doesn't seem to matter - it always looks the same.&nbsp; I even changed it from 2 to 5 and then to 0.5 and couldn't see any difference.&nbsp; If you can figure out how to get the strokethickness to do whatever you want (by mucking with the path directly) then let me know and I'll figure out how you can get the value set via a binding or style.&nbsp; I'm not going to check in what I've done so far, since it seems silly to add a DP and the plumbing in the xaml if the Path is just going to ignore it anyway.</p>",
    "PostedDate": "2009-10-07T12:35:58.767-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "243324",
    "ThreadId": "70832",
    "Html": "<p>If I copy the edge control template into my zoom control resources, as I did for the tool tip, then I can set the stroke thickness to different values and get the expected outcome.&nbsp;&nbsp;Furthermore, if I add&nbsp;a trigger to the control template, for example</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">ControlTemplate.Triggers</span><span style=\"color:Blue\">&gt;</span>\r\n  <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">DataTrigger</span> <span style=\"color:Red\">Binding</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">{Binding Path=Active}</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Value</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">True</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span>\r\n    <span style=\"color:Blue\">&lt;</span><span style=\"color:#A31515\">Setter</span> <span style=\"color:Red\">Property</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">StrokeThickness</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">Value</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">5</span><span style=\"color:Black\">&quot;</span> <span style=\"color:Red\">TargetName</span><span style=\"color:Blue\">=</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">edgePath</span><span style=\"color:Black\">&quot;</span><span style=\"color:Blue\">&gt;</span><span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">Setter</span><span style=\"color:Blue\">&gt;</span>\r\n  <span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">DataTrigger</span><span style=\"color:Blue\">&gt;</span>\r\n<span style=\"color:Blue\">&lt;/</span><span style=\"color:#A31515\">ControlTemplate.Triggers</span><span style=\"color:Blue\">&gt;</span>\r\n</pre>\r\n</div>\r\n<p>then the line thickness varies, as expected.&nbsp; But ideally you'd want to be able to write something like the trigger without having to also duplicate the EdgeControl control template code.</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-10-08T02:03:59.53-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "243675",
    "ThreadId": "70832",
    "Html": "<p>ok... I have no idea why I couldn't see any changes in the size, but I've checked in the changes I made.&nbsp; See if when you set the StrokeThickness on the style whether it does what you'd expect.&nbsp; It didn't seem to do anything when I tried it, but maybe I was not using it correctly, or looking in the wrong place.</p>\r\n<p>Kelly</p>",
    "PostedDate": "2009-10-08T18:34:05.17-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "559783",
    "ThreadId": "70832",
    "Html": "\r\n<p>And do you do when the tooltip is a property of the custom Edge that you want to bind, and the datacontext do not include him?</p>\r\n<p>Here is the custom Edge</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> PocEdge : Edge&lt;PocVertex&gt;\r\n    {\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">string</span> ID\r\n        {\r\n            <span style=\"color:blue\">get</span>;\r\n            <span style=\"color:blue\">private</span> <span style=\"color:blue\">set</span>;\r\n        }\r\n\r\n        <span style=\"color:blue\">public</span> PocEdge(<span style=\"color:blue\">string</span> id, PocVertex source, PocVertex target)\r\n            : <span style=\"color:blue\">base</span>(source, target)\r\n        {\r\n            ID = id;\r\n        }\r\n    }\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>Here is the Xaml</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">Style</span> <span style=\"color:red\">TargetType</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">{x:Type graphsharp:EdgeControl}</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">&gt;</span>\r\n            <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">Style.Resources</span><span style=\"color:blue\">&gt;</span>\r\n                <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">ToolTip</span> <span style=\"color:red\">x:Key</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">ToolTipContent</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">&gt;</span>\r\n                    <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">StackPanel</span><span style=\"color:blue\">&gt;</span>\r\n                        <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">TextBlock</span> <span style=\"color:red\">FontWeight</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">Bold</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">Text</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">Edge.ID</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">/&gt;</span>\r\n                        <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">TextBlock</span> <span style=\"color:red\">Text</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">{Binding ID}</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">/&gt;</span>\r\n                    <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">StackPanel</span><span style=\"color:blue\">&gt;</span>\r\n                <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">ToolTip</span><span style=\"color:blue\">&gt;</span>\r\n            <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">Style.Resources</span><span style=\"color:blue\">&gt;</span>\r\n            <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">Setter</span> <span style=\"color:red\">Property</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">ToolTip</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">Value</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">{StaticResource ToolTipContent}</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">/&gt;</span>\r\n<span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">Style</span><span style=\"color:blue\">&gt;</span>\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>The error I get at runtime:</p>\r\n<p>System.Windows.Data Error: 40 : BindingExpression path error: 'ID' property not found on 'object' ''MainWindowViewModel' (HashCode=27666100)'. BindingExpression:Path=ID; DataItem='MainWindowViewModel' (HashCode=27666100); target element is 'TextBlock' (Name='');\r\n target property is 'Text' (type 'String')</p>\r\n<p>Thanks</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2011-02-02T16:14:02.403-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "559845",
    "ThreadId": "70832",
    "Html": "\r\n<p>I'm going to guess that you're using the Jun 2009 build (v1.0) and not building from the latest sources.&nbsp; I made several changes but a new build has not been posted with my changes.&nbsp; I'd recommend you grab the sources and build sources and see\r\n if that fixes your problems.</p>\r\n<p>Kelly</p>\r\n",
    "PostedDate": "2011-02-02T20:49:38.1-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "562901",
    "ThreadId": "70832",
    "Html": "\r\n<p>Thanks a lot problem solved with the last version build from source of graphsharp and the control.</p>\r\n",
    "PostedDate": "2011-02-08T13:32:40.513-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "563934",
    "ThreadId": "70832",
    "Html": "\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>&lt;TextBlock FontWeight=<span style=\"color:#a31515\">&quot;Bold&quot;</span> Text=<span style=\"color:#a31515\">&quot;Edge.ID&quot;</span>/&gt;\r\n</pre>\r\n<pre><br></pre>\r\n<pre>There is no error is running the code except there is no binding to the Edge.ID</pre>\r\n<pre>Each Tooltip has exactly the same word &quot;Edge.ID&quot;</pre>\r\n<pre><br></pre>\r\n<pre>Any suggestion, kind of learning WPF now.</pre>\r\n</div>\r\n",
    "PostedDate": "2011-02-10T06:15:09.993-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "564041",
    "ThreadId": "70832",
    "Html": "\r\n<div>\r\n<p><span style=\"font-size:11.0pt; font-family:\">That’s because you didn’t put any binding for Text. Bindings look like “{Binding Edge.ID}”, you just supplied text (“Edge.ID”).</span></p>\r\n<p><span style=\"font-size:11.0pt; font-family:\"></span></p>\r\n<p><span style=\"font-size:11.0pt; font-family:\">This is a tough project to start learning WPF with, I’d recommend you try to learn how binding works a bit before you dive into trying to use it on this project.</span></p>\r\n<p><span style=\"font-size:11.0pt; font-family:\"></span></p>\r\n<p><span style=\"font-size:11.0pt; font-family:\">Kelly</span></p>\r\n<p><span style=\"font-size:11.0pt; font-family:\"></span></p>\r\n<p><b><span style=\"font-size:10.0pt; font-family:\">From:</span></b><span style=\"font-size:10.0pt; font-family:\"> OnSharp &lt;notifications@codeplex.com&gt; [mailto:OnSharp &lt;notifications@codeplex.com&gt;]\r\n<br>\r\n<b>Sent:</b> Thursday, February 10, 2011 6:15 AM<br>\r\n<b>To:</b> kelly.leahy@milliman.com<br>\r\n<b>Subject:</b> Re: Tool tips on edges [graphsharp:70832]</span></p>\r\n<p></p>\r\n<p></p>\r\n<p><span style=\"font-size:9.0pt; font-family:\">From: OnSharp</span></p>\r\n<div id=\"x_x_ThreadNotificationPostBody\" style=\"margin-bottom:24.0pt\">\r\n<p><span style=\"font-size:9.0pt; font-family:\"></span></p>\r\n<div>\r\n<pre style=\"background:white\"><span style=\"font-size:11.5pt; color:black\">&lt;TextBlock FontWeight=</span><span style=\"font-size:11.5pt; color:#A31515\">&quot;Bold&quot;</span><span style=\"font-size:11.5pt; color:black\"> Text=</span><span style=\"font-size:11.5pt; color:#A31515\">&quot;Edge.ID&quot;</span><span style=\"font-size:11.5pt; color:black\">/&gt;</span></pre>\r\n<pre style=\"background:white\"><span style=\"font-size:11.5pt; color:black\"> </span></pre>\r\n<pre style=\"background:white\"><span style=\"font-size:11.5pt; color:black\">There is no error is running the code except there is no binding to the Edge.ID</span></pre>\r\n<pre style=\"background:white\"><span style=\"font-size:11.5pt; color:black\">Each Tooltip has exactly the same word &quot;Edge.ID&quot;</span></pre>\r\n<pre style=\"background:white\"><span style=\"font-size:11.5pt; color:black\"> </span></pre>\r\n<pre style=\"background:white\"><span style=\"font-size:11.5pt; color:black\">Any suggestion, kind of learning WPF now.</span></pre>\r\n</div>\r\n</div>\r\n</div>\r\n<br>\r\n<font size=\"2\" face=\"Arial\">**************************************************************************************</font><br>\r\n<font size=\"2\" face=\"Arial\">This communication is intended solely for the addressee and is</font><br>\r\n<font size=\"2\" face=\"Arial\">confidential. If you are not the intended recipient, any disclosure,\r\n</font><br>\r\n<font size=\"2\" face=\"Arial\">copying, distribution or any action taken or omitted to be taken in</font><br>\r\n<font size=\"2\" face=\"Arial\">reliance on it, is prohibited and may be unlawful. Unless indicated</font><br>\r\n<font size=\"2\" face=\"Arial\">to the contrary: it does not constitute professional advice or opinions</font><br>\r\n<font size=\"2\" face=\"Arial\">upon which reliance may be made by the addressee or any other party,</font><br>\r\n<font size=\"2\" face=\"Arial\">and it should be considered to be a work in progress. Unless otherwise</font><br>\r\n<font size=\"2\" face=\"Arial\">noted in this email or its attachments, this communication does not form\r\n</font><br>\r\n<font size=\"2\" face=\"Arial\">a Statement of Actuarial Opinion under American Academy of Actuaries guidelines.</font><br>\r\n<font size=\"2\" face=\"Arial\">**************************************************************************************</font>",
    "PostedDate": "2011-02-10T08:51:23.593-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "633553",
    "ThreadId": "70832",
    "Html": "<p>Hi there,</p>\r\n<p>I've been reading through this thread with great interest. I am unfortunately still trying to puzzle out the correct style template to set the edge thickness. Any change you could write it out in full, i think i am missing things between posts.&nbsp; Even just to set the stroke thickness to a constant value would get me going</p>\r\n<p>many thanks</p>\r\n<p>David</p>",
    "PostedDate": "2011-06-27T07:51:56.177-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "638066",
    "ThreadId": "70832",
    "Html": "<p>Hi. I have been impressed with the functionlaity of GraphSharp. I have been working on what information is available on this. I also am new to the C# environment.</p>\r\n<p>&nbsp;</p>\r\n<p>I have read through the thread, since I am looking for a functionlaity to display a tooltip on a Vertex. The tooltip needs to take the string value from the Vertex and do a database call to obtain other information. Hence each tooltip will be unique.</p>\r\n<p>&nbsp;</p>\r\n<p>I would apprecita if the code that was dicussed in this thread could be available. This helps to understand how each componenet work together.</p>\r\n<p>&nbsp;</p>\r\n<p>Kind regards.</p>",
    "PostedDate": "2011-07-06T05:37:11.39-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]