[
  {
    "Id": "273432",
    "ThreadId": "79824",
    "Html": "<p>Dear all,</p>\r\n<p>I am&nbsp;developing a program that shows a random walk on a graph.</p>\r\n<p>When the walker enters a vertex, I want to highlight it.<br>When the walker leaves the vertex and enters the next vertex, I want to remove highlight from the first vertex, and highlight the next one.</p>\r\n<p>Besides, user can click some vertices as targets.&nbsp; If the random walker hit any one of those targets, the program ends.&nbsp; Here I also want to set different styles to those target vertices.</p>\r\n<p>I've tried the following,</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MyGraph g = new MyGraph();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; g.AddVerticesAndEdge(new MyEdge(&quot;hello&quot;, &quot;world&quot;));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; layout.Graph = g;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; layout.HighlightVertex(new MyVertex(&quot;world&quot;), null);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; layout.RemoveHighlightFromVertex(new MyVertex(&quot;hello&quot;));</p>\r\n<p>I just couldn't figure out what to put as the second argument for HighlightVertex()</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; layout.HighlightVertex(TVertex, object);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // object??&nbsp; what type of&nbsp;object??</p>\r\n<p>My second question is, can the highlighting change the shape, color and size??<br>For example,&nbsp;changing from a small green&nbsp;ellipse into a big red&nbsp;rectangle.&nbsp; How can I do it??</p>\r\n<p>Thank you in advance.&nbsp; Happy new year!!!</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-01-05T11:16:32.273-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "273826",
    "ThreadId": "79824",
    "Html": "<p>I figured out a little bit.</p>\r\n<p>For the first&nbsp;argument,&nbsp;I should pass-in the original&nbsp;object instead of a new object (new MyVertex(&quot;world&quot;)&nbsp;is a new object).<br>Then, I found at least 4 different workable&nbsp;highlightings.</p>\r\n<p>&nbsp;&nbsp;&nbsp; layout.HighlightVertex(v, null);<br>&nbsp;&nbsp;&nbsp; layout.SemiHighlightVertex(v, null);<br>&nbsp;&nbsp;&nbsp; layout.SemiHighlightVertex(v, &quot;Source&quot;);<br>&nbsp;&nbsp;&nbsp; layout.SemiHighlightVertex(v, &quot;Target&quot;);</p>\r\n<p>At least I can&nbsp;use these 4 highlightings in my program, although I still don't know why they worked.<br>I&nbsp;wonder whether there are other choices available or not.&nbsp; I am also curious about how to change vertex shapes dynamically.</p>\r\n<p>Hope&nbsp;Graph# has some&nbsp;documentation.</p>",
    "PostedDate": "2010-01-06T08:00:01.613-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "274671",
    "ThreadId": "79824",
    "Html": "<p>I figured out more.</p>\r\n<p>I consulted &quot;PocGraphDataTemplates.xaml&quot; in the source code project, and copied the&nbsp;&lt;Style TargetType=&quot;{x:Type GraphSharp_Controls:VertexControl}&quot;&gt; and all related resources into my &lt;Window.Resources&gt;</p>\r\n<p>I&nbsp;created a&nbsp;MultiTrigger like this:</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;MultiTrigger&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;MultiTrigger.Conditions&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Condition Property=&quot;GraphSharp_Controls:GraphElementBehaviour.IsSemiHighlighted&quot; Value=&quot;True&quot;/&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Condition Property=&quot;GraphSharp_Controls:GraphElementBehaviour.SemiHighlightInfo&quot; Value=&quot;<span style=\"color:#ff0000\">BigRedRectangle</span>&quot;/&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/MultiTrigger.Conditions&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Setter Property=&quot;Template&quot;&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Setter.Value&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;ControlTemplate TargetType=&quot;{x:Type GraphSharp_Controls:VertexControl}&quot;&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Rectangle Width=&quot;100&quot; Height=&quot;100&quot; Fill=&quot;Red&quot; /&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/ControlTemplate&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/Setter.Value&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/Setter&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/MultiTrigger&gt;</p>\r\n<p>then I can change the shape of a vertex&nbsp;with&nbsp;layout.SemiHighlightVertex(v, &quot;<span style=\"color:#ff0000\">BigRedRectangle</span>&quot;);</p>\r\n<p>In some sense, source code project itself is a good documentation.</p>",
    "PostedDate": "2010-01-08T01:01:43.643-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]