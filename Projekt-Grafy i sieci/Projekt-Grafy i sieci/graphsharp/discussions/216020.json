[
  {
    "Id": "455438",
    "ThreadId": "216020",
    "Html": "Hi,\r\n\r\nI started using Graph# in my product, and really enjoy it so far. Maybe it's because I'm new but I'm hoping someone can shed some light on an issue I'm having.  When I call the RemoveEdge method on my CompoundGraph instance, the GraphLayout control is not updating the graph's layout.\r\n\r\nAfter digging through the GraphLayout source, it looks like it checks the value of a protected property called IsCompoundMode. If that property is set to true then the GraphLayout does not subscribe to the graph's EdgeAdded and EdgeRemoved events.\r\n\r\nHow easy would it be to modify the code so that my CompoundGraph can have its layout updated whenever I programmatically remove an edge?\r\n\r\n\r\nThanks,\r\n\r\nJerry",
    "PostedDate": "2010-06-14T17:29:55.347-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "461687",
    "ThreadId": "216020",
    "Html": "I'm experiencing the same problem.\r\nI've implemented drag-n-drop support for vertices and edge-creation through CTRL+drag and I want to reflect my changes directly and without relayouting (just update the UI)!\r\n\r\nReplacing all occurances of IsCompoundMode in GraphSharp.Controls.GraphLayout.RecreateGraphElements with false makes the UI relect my changes and behaves nicely.\r\n\r\nSo, is there any particular reason why I shouldn't solve it this way? (apart from having to hack your source since RecreateGraphElements isn't virtual).\r\n\r\nKind regards,\r\nRichard",
    "PostedDate": "2010-06-30T08:01:19.813-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]