[
  {
    "Id": "1059370",
    "ThreadId": "447749",
    "Html": "I am working on a project which deals with grouping the twitter users based on hash-tags. I am storing the tweets in a local database . I want to know if GraphSharp can be used to represent high volumes of twitter data. Also, is it possible to apply some group detection algorithms using GraphSharp. Thanks.<br />\n",
    "PostedDate": "2013-06-20T13:58:38.733-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1059462",
    "ThreadId": "447749",
    "Html": "Hi! Let me advice you to look at my project: <a href=\"http://graphx.codeplex.com\" rel=\"nofollow\">http://graphx.codeplex.com</a> as it is based on Graph# and provides musch more extensibility and features. Surely you can use Graph# too if you want, but i think GraphX will provide more performance in rendering.<br />\n<ol>\n<li>\nHigh volumes of data still depends on numbers. While performance still can be good with numbers around 3000 it can greatly degrade for higher numbers. Also you can make special tweaks that depends on the features you want to have with the displayed graph, for ex. you can use DrawVisual rendering for faster drawing but this will decline all autofeatures such as templates, dragging and highlighting (you have to tweak it manually then).<br />\n</li>\n<li>\nI'll advice you to use the LinLog algorithm for object grouping. It uses edge weights to decide which vertices will be grouped and how close they are will be to each other so with a large graph you can surely see how they are grouped together.<br />\n</li>\n</ol>\n",
    "PostedDate": "2013-06-20T21:53:18.547-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1061425",
    "ThreadId": "447749",
    "Html": "Hi Panthernet,\r<br />\n<br />\nI am looking for a tool that can visualize tweets similar to <a href=\"http://mentionmapp.com/\" rel=\"nofollow\">http://mentionmapp.com/</a>.  Can Graphx achieve similar functionality ?<br />\n",
    "PostedDate": "2013-06-26T06:44:05.877-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1061449",
    "ThreadId": "447749",
    "Html": "Well, with GraphX you can do everything. But not out of the box ofcause. Mentionmapp implementation have very dynamic layout that is recalculated in real-time (i suppose some physics algorithms are used there) opposing to GraphX that support static layout with the ability to manually drag vertices.\r<br />\nAll other visual stuff can be implemented using XAML templates along with the highlighting.\r<br />\n<br />\nI think Mentionapp layout style can be implemented in GraphX using CompoundFDP layout that has been added to sources recently (not in the release yet).\r<br />\n<br />\nDynamic layouting is cool feature but IMHO it is more effecient to work with the good static layout as nothing is moving, overlapping and blinking :) I think dynamic layout can be implemented in GraphX but it must be coded manualy. It is interesting task to join graph layout with some phys engine.<br />\n",
    "PostedDate": "2013-06-26T07:16:23.863-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1061495",
    "ThreadId": "447749",
    "Html": "Thanks.\r<br />\n<br />\nIs the drill down functionality available ? For instance, let A be the parent vertex. In the initial load, I just want to load a graph with the parent vertex and its first level children. When I click on any of the children , I should get a new graph with the clicked vertex as the current parent and the children surrounding it.  <br />\n",
    "PostedDate": "2013-06-26T08:34:47.187-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1061563",
    "ThreadId": "447749",
    "Html": "Can you provide a sample application which shows the graph control data binding ?<br />\n",
    "PostedDate": "2013-06-26T10:10:27.867-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1061657",
    "ThreadId": "447749",
    "Html": "<blockquote>\nCan you provide a sample application which shows the graph control data binding ?<br />\n</blockquote>\nYou can look at Showcase app in the sources: there are a lot of examples. Source files are stable and contains latest version till i assemble many features for the next release.<br />\n<blockquote>\nIs the drill down functionality available ? <br />\n</blockquote>\nI've done smth like that for my own needs. All you need to do is to bind to VertexSelected (or VertexDoubleClick or smth) event of the GraphArea and regenerate graph (Optionaly clear old info and add new vertices and edges). You can find how to do it in the Showcase app.<br />\n",
    "PostedDate": "2013-06-26T13:30:21.223-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]