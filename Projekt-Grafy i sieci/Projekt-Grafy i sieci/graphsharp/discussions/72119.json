[
  {
    "Id": "246138",
    "ThreadId": "72119",
    "Html": "<p>One of the missing things in Graph# is the ability to label edges. Pure edge labelling is a difficult problem. Here is an approach which. though not perfect, may be a starting point for making your own edge labels.</p>\r\n<p>The first thing to define is a graph with tagged edges. The tag of an edge is an object: this object will be shown, as dictated by WPF (a datatemplate, or the ToString() representation. This makes it&nbsp;compliant with MVVM:</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre>    <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">class</span> TaggedGraphLayout : GraphLayout&lt;<span style=\"color:Blue\">object</span>, TaggedEdge&lt;<span style=\"color:Blue\">object</span>, <span style=\"color:Blue\">object</span>&gt;, IBidirectionalGraph&lt;<span style=\"color:Blue\">object</span>, TaggedEdge&lt;<span style=\"color:Blue\">object</span>, <span style=\"color:Blue\">object</span>&gt;&gt;&gt;\r\n    {\r\n    }\r\n\r\n</pre>\r\n</div>\r\n<p>With this definition, you can construct a labelled edge graph&nbsp;like this:</p>\r\n<p><span style=\"font-size:x-small\"><span style=\"font-size:x-small\"> </span></span></p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre>            <span style=\"color:Blue\">var</span> g = <span style=\"color:Blue\">new</span> BidirectionalGraph&lt;<span style=\"color:Blue\">object</span>, TaggedEdge&lt;<span style=\"color:Blue\">object</span>, <span style=\"color:Blue\">object</span>&gt;&gt;();\r\n\r\n            <span style=\"color:Green\">//add the vertices to the graph</span>\r\n            Person[] vertices = <span style=\"color:Blue\">new</span> Person[5];\r\n            <span style=\"color:Blue\">for</span> (<span style=\"color:Blue\">int</span> i = 0; i &lt; 5; i++)\r\n            {\r\n                vertices[i] = <span style=\"color:Blue\">new</span> Person { FirstName = String.Format(<span style=\"color:#A31515\">&quot;FirstName{0}&quot;</span>, i), LastName = String.Format(<span style=\"color:#A31515\">&quot;LastName{0}&quot;</span>, i) };\r\n                g.AddVertex(vertices[i]);\r\n            }\r\n\r\n            <span style=\"color:Green\">//add some edges to the graph</span>\r\n            g.AddEdge(<span style=\"color:Blue\">new</span> TaggedEdge&lt;<span style=\"color:Blue\">object</span>, <span style=\"color:Blue\">object</span>&gt;(vertices[0], vertices[1], <span style=\"color:#A31515\">&quot;Tag1&quot;</span>));\r\n            g.AddEdge(<span style=\"color:Blue\">new</span> TaggedEdge&lt;<span style=\"color:Blue\">object</span>, <span style=\"color:Blue\">object</span>&gt;(vertices[1], vertices[2], <span style=\"color:#A31515\">&quot;Tag2&quot;</span>));\r\n            g.AddEdge(<span style=\"color:Blue\">new</span> TaggedEdge&lt;<span style=\"color:Blue\">object</span>, <span style=\"color:Blue\">object</span>&gt;(vertices[2], vertices[3], <span style=\"color:#A31515\">&quot;Tag3&quot;</span>));\r\n            g.AddEdge(<span style=\"color:Blue\">new</span> TaggedEdge&lt;<span style=\"color:Blue\">object</span>, <span style=\"color:Blue\">object</span>&gt;(vertices[3], vertices[1], <span style=\"color:#A31515\">&quot;Tag4&quot;</span>));\r\n            g.AddEdge(<span style=\"color:Blue\">new</span> TaggedEdge&lt;<span style=\"color:Blue\">object</span>, <span style=\"color:Blue\">object</span>&gt;(vertices[1], vertices[4], <span style=\"color:#A31515\">&quot;Tag5&quot;</span>));\r\n\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;We're done with the easy part. Now for the hard part: what you need to do is to define a new control template for EdgeControl. This control template will contain a canvas with 2 elements:&nbsp;a Path figure with the actual edge (brutally and shamelessly copied from EdgeControl's template), and a labelled edge control bound to the edge tag:</p>\r\n<p><span style=\"font-size:x-small\">&nbsp;</span>&nbsp;</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre>        &lt;Converters:EdgeRouteToPathConverter x:Key=<span style=\"color:#A31515\">&quot;routeToPathConverter&quot;</span> /&gt;\r\n        &lt;Style TargetType=<span style=\"color:#A31515\">&quot;{x:Type Controls:EdgeControl}&quot;</span>&gt;\r\n            &lt;Setter Property=<span style=\"color:#A31515\">&quot;Template&quot;</span>&gt;\r\n                &lt;Setter.Value&gt;\r\n                    &lt;ControlTemplate TargetType=<span style=\"color:#A31515\">&quot;{x:Type Controls:EdgeControl}&quot;</span>&gt;\r\n                        &lt;Canvas&gt;\r\n                            &lt;Path Stroke=<span style=\"color:#A31515\">&quot;{TemplateBinding Foreground}&quot;</span>\r\n                          StrokeThickness=<span style=\"color:#A31515\">&quot;2&quot;</span>\r\n                          MinWidth=<span style=\"color:#A31515\">&quot;1&quot;</span>\r\n                          MinHeight=<span style=\"color:#A31515\">&quot;1&quot;</span>\r\n                          x:Name=<span style=\"color:#A31515\">&quot;edgePath&quot;</span>&gt;\r\n                                &lt;Path.Data&gt;\r\n                                    &lt;PathGeometry&gt;\r\n                                        &lt;PathGeometry.Figures&gt;\r\n                                            &lt;MultiBinding Converter=<span style=\"color:#A31515\">&quot;{StaticResource routeToPathConverter}&quot;</span>&gt;\r\n                                                &lt;Binding RelativeSource=<span style=\"color:#A31515\">&quot;{RelativeSource TemplatedParent}&quot;</span>\r\n                                                 Path=<span style=\"color:#A31515\">&quot;Source.(Controls:GraphCanvas.X)&quot;</span> /&gt;\r\n                                                &lt;Binding RelativeSource=<span style=\"color:#A31515\">&quot;{RelativeSource TemplatedParent}&quot;</span>\r\n                                                 Path=<span style=\"color:#A31515\">&quot;Source.(Controls:GraphCanvas.Y)&quot;</span> /&gt;\r\n                                                &lt;Binding RelativeSource=<span style=\"color:#A31515\">&quot;{RelativeSource TemplatedParent}&quot;</span>\r\n                                                 Path=<span style=\"color:#A31515\">&quot;Source.ActualWidth&quot;</span> /&gt;\r\n                                                &lt;Binding RelativeSource=<span style=\"color:#A31515\">&quot;{RelativeSource TemplatedParent}&quot;t;/span&gt;\r\n                                                 Path=<span style=\"color:#A31515\">&quot;Source.ActualHeight&quot;</span> /&gt;\r\n                                                &lt;Binding RelativeSource=<span style=\"color:#A31515\">&quot;{RelativeSource TemplatedParent}&quot;</span>\r\n                                                 Path=<span style=\"color:#A31515\">&quot;Target.(Controls:GraphCanvas.X)&quot;</span> /&gt;\r\n                                                &lt;Binding RelativeSource=<span style=\"color:#A31515\">&quot;{RelativeSource TemplatedParent}&quot;</span>\r\n                                                 Path=<span style=\"color:#A31515\">&quot;Target.(Controls:GraphCanvas.Y)&quot;</span> /&gt;\r\n                                                &lt;Binding RelativeSource=<span style=\"color:#A31515\">&quot;{RelativeSource TemplatedParent}&quot;</span>\r\n                                                 Path=<span style=\"color:#A31515\">&quot;Target.ActualWidth&quot;</span> /&gt;\r\n                                                &lt;Binding RelativeSource=<span style=\"color:#A31515\">&quot;{RelativeSource TemplatedParent}&quot;</span>\r\n                                                 Path=<span style=\"color:#A31515\">&quot;Target.ActualHeight&quot;</span> /&gt;\r\n                                                &lt;Binding RelativeSource=<span style=\"color:#A31515\">&quot;{RelativeSource TemplatedParent}&quot;</span>\r\n                                                 Path=<span style=\"color:#A31515\">&quot;RoutePoints&quot;</span> /&gt;\r\n                                            &lt;/MultiBinding&gt;\r\n                                        &lt;/PathGeometry.Figures&gt;\r\n                                    &lt;/PathGeometry&gt;\r\n                                &lt;/Path.Data&gt;\r\n                            &lt;/Path&gt;\r\n                            &lt;local:EdgeLabelControl Content=<span style=\"color:#A31515\">&quot;{Binding Edge.Tag, RelativeSource={RelativeSource TemplatedParent}}&quot;</span> /&gt;\r\n                        &lt;/Canvas&gt;\r\n                    &lt;/ControlTemplate&gt;\r\n                &lt;/Setter.Value&gt;\r\n            &lt;/Setter&gt;\r\n        &lt;/Style&gt;\r\n\r\n</span></pre>\r\n</div>\r\n<p>Put this template somewhere, where it can be seen from the visual graph. Don't forget to set the &quot;local:&quot; namespace to the correct assembly where the LabelledEdgeControl is defined. Check the other namespace prefixes as wel. I'm sure you know the drill.</p>\r\n<p>And for the definition of that control, use the following (it contains the high school trig we all love):</p>\r\n<p><span style=\"font-size:x-small\"><span style=\"font-size:x-small\"> </span></span></p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre>    <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">class</span> EdgeLabelControl : ContentControl\r\n    {\r\n        <span style=\"color:Blue\">public</span> EdgeLabelControl()\r\n        {\r\n            LayoutUpdated += EdgeLabelControl_LayoutUpdated;\r\n        }\r\n\r\n        <span style=\"color:Blue\">private</span> EdgeControl GetEdgeControl(DependencyObject parent)\r\n        {\r\n            <span style=\"color:Blue\">while</span> (parent != <span style=\"color:Blue\">null</span>)\r\n                <span style=\"color:Blue\">if</span> (parent <span style=\"color:Blue\">is</span> EdgeControl)\r\n                    <span style=\"color:Blue\">return</span> (EdgeControl)parent;\r\n                <span style=\"color:Blue\">else</span>\r\n                    parent = VisualTreeHelper.GetParent(parent);\r\n            <span style=\"color:Blue\">return</span> <span style=\"color:Blue\">null</span>;\r\n        }\r\n\r\n        <span style=\"color:Blue\">private</span> <span style=\"color:Blue\">static</span> <span style=\"color:Blue\">double</span> GetAngleBetweenPoints(Point point1, Point point2)\r\n        {\r\n            <span style=\"color:Blue\">return</span> Math.Atan2(point1.Y - point2.Y, point2.X - point1.X);\r\n        }\r\n\r\n        <span style=\"color:Blue\">private</span> <span style=\"color:Blue\">static</span> <span style=\"color:Blue\">double</span> GetDistanceBetweenPoints(Point point1, Point point2)\r\n        {\r\n            <span style=\"color:Blue\">return</span> Math.Sqrt(Math.Pow(point2.X - point1.X, 2) + Math.Pow(point2.Y - point1.Y, 2));\r\n        }\r\n\r\n        <span style=\"color:Blue\">private</span> <span style=\"color:Blue\">static</span> <span style=\"color:Blue\">double</span> GetLabelDistance(<span style=\"color:Blue\">double</span> edgeLength)\r\n        {\r\n            <span style=\"color:Blue\">return</span> edgeLength / 2;  <span style=\"color:Green\">// set the label halfway the length of the edge</span>\r\n        }\r\n\r\n        <span style=\"color:Blue\">private</span> <span style=\"color:Blue\">void</span> EdgeLabelControl_LayoutUpdated(<span style=\"color:Blue\">object</span> sender, EventArgs e)\r\n        {\r\n            <span style=\"color:Blue\">if</span> (!IsLoaded)\r\n                <span style=\"color:Blue\">return</span>;\r\n            <span style=\"color:Blue\">var</span> edgeControl = GetEdgeControl(VisualParent);\r\n            <span style=\"color:Blue\">if</span> (edgeControl == <span style=\"color:Blue\">null</span>)\r\n                <span style=\"color:Blue\">return</span>;\r\n            <span style=\"color:Blue\">var</span> source = edgeControl.Source;\r\n            <span style=\"color:Blue\">var</span> p1 = <span style=\"color:Blue&lt;mce:script type=\">ot;&gt;new</span> Point(GraphCanvas.GetX(source), GraphCanvas.GetY(source));\r\n            <span style=\"color:Blue\">var</span> target = edgeControl.Target;\r\n            <span style=\"color:Blue\">var</span> p2 = <span style=\"color:Blue\">new</span> Point(GraphCanvas.GetX(target), GraphCanvas.GetY(target));\r\n\r\n            <span style=\"color:Blue\">double</span> edgeLength;\r\n            <span style=\"color:Blue\">var</span> routePoints = edgeControl.RoutePoints;\r\n            <span style=\"color:Blue\">if</span> (routePoints == <span style=\"color:Blue\">null</span>)\r\n                <span style=\"color:Green\">// the edge is a single segment (p1,p2)</span>\r\n                edgeLength = GetLabelDistance(GetDistanceBetweenPoints(p1, p2));\r\n            <span style=\"color:Blue\">else</span>\r\n            {\r\n                <span style=\"color:Green\">// the edge has one or more segments</span>\r\n                <span style=\"color:Green\">// compute the total length of all the segments</span>\r\n                edgeLength = 0;\r\n                <span style=\"color:Blue\">for</span> (<span style=\"color:Blue\">int</span> i = 0; i &lt;= routePoints.Length; ++i)\r\n                    <span style=\"color:Blue\">if</span> (i == 0)\r\n                        edgeLength += GetDistanceBetweenPoints(p1, routePoints[0]);\r\n                    <span style=\"color:Blue\">else</span> <span style=\"color:Blue\">if</span> (i == routePoints.Length)\r\n                        edgeLength += GetDistanceBetweenPoints(routePoints[routePoints.Length - 1], p2);\r\n                    <span style=\"color:Blue\">else</span>\r\n                        edgeLength += GetDistanceBetweenPoints(routePoints[i - 1], routePoints[i]);\r\n                <span style=\"color:Green\">// find the line segment where the half distance is located</span>\r\n                edgeLength = GetLabelDistance(edgeLength);\r\n                Point newp1 = p1;\r\n                Point newp2 = p2;\r\n                <span style=\"color:Blue\">for</span> (<span style=\"color:Blue\">int</span> i = 0; i &lt;= routePoints.Length; ++i)\r\n                {\r\n                    <span style=\"color:Blue\">double</span> lengthOfSegment;\r\n                    <span style=\"color:Blue\">if</span> (i == 0)\r\n                        lengthOfSegment = GetDistanceBetweenPoints(newp1 = p1, newp2 = routePoints[0]);\r\n                    <span style=\"color:Blue\">else</span> <span style=\"color:Blue\">if</span> (i == routePoints.Length)\r\n                        lengthOfSegment = GetDistanceBetweenPoints(newp1 = routePoints[routePoints.Length - 1], newp2 = p2);\r\n                    <span style=\"color:Blue\">else</span>\r\n                        lengthOfSegment = GetDistanceBetweenPoints(newp1 = routePoints[i - 1], newp2 = routePoints[i]);\r\n                    <span style=\"color:Blue\">if</span> (lengthOfSegment &gt;= edgeLength)\r\n                        <span style=\"color:Blue\">break</span>;\r\n                    edgeLength -= lengthOfSegment;\r\n                }\r\n                <span style=\"color:Green\">// redefine our edge points</span>\r\n                p1 = newp1;\r\n                p2 = newp2;\r\n            }\r\n            <span style=\"color:Green\">// align the point so that it  passes through the center of the label content</span>\r\n            <span style=\"color:Blue\">var</span> p = p1;\r\n            <span style=\"color:Blue\">var</span> desiredSize = DesiredSize;\r\n            p.Offset(-desiredSize.Width / 2, -desiredSize.Height / 2);\r\n\r\n            <span style=\"color:Green\">// move it &quot;edgLength&quot; on the segment</span>\r\n            <span style=\"color:Blue\">var</span> angleBetweenPoints = GetAngleBetweenPoints(p1, p2);\r\n            p.Offset(edgeLength * Math.Cos(angleBetweenPoints), -edgeLength * Math.Sin(angleBetweenPoints));\r\n            Arrange(<span style=\"color:Blue\">new</span> Rect(p, desiredSize));\r\n        }\r\n    }\r\n\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>The placement of the label is always at halfway the edge length. If the edge consists of multilple segments, the label is aligned in the correct segment. It's a stupid heuristic, but it kinda works well.</p>\r\n<p>If you are adventurous, you can use a rotation matrix to rotate the lable at an angle corresponding to the angle of the edge segment. I didn't do this, because it gave me a pain in the neck (literally!) reading the labels. You have been warned.</p>\r\n<p>That's all there is to it.&nbsp;The placement is&nbsp;purely visual, and the label itself does not participate in&nbsp;the edge route computation (when present: I'm talking about Sugiyama, here, since nontrivial routing&nbsp;is currently missing from all other layout algorithms). But it's a start: the esteemed author of Graph# will surely improve on the method.</p>\r\n<p>Have fun.</p>\r\n<p>Vincent</p>",
    "PostedDate": "2009-10-15T10:30:53.98-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "254775",
    "ThreadId": "72119",
    "Html": "<p>Hi.</p>\r\n<p>Unfortunetly your solution does not worked for me. Besides the label does not appear on the graph I obtain an error:</p>\r\n<p>Error&nbsp;&nbsp; &nbsp;1&nbsp;&nbsp; &nbsp;A 'MultiBinding' cannot be used within a 'PathFigureCollection' collection. A 'MultiBinding' can only be set on a DependencyProperty of a DependencyObject.&nbsp;&nbsp; &nbsp;C:\\Documents and Settings\\Daniela\\Meus documentos\\Visual Studio 2008\\Projects\\GraphSharpTest\\GraphSharpTest\\Window1.xaml&nbsp;&nbsp;&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>Can you help me?</p>\r\n<p>Do you have any example working?</p>\r\n<p>&nbsp;</p>\r\n<p>thanks</p>",
    "PostedDate": "2009-11-08T10:05:03.723-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "423931",
    "ThreadId": "72119",
    "Html": "<p>Hey wdb,</p>\r\n<p>Thanks for the great solution! I have used it and it works great! However I have one question:</p>\r\n<ol>\r\n<li>Using your solution, how would I catch a MouseDown event of an edge? (I have tried getting the Parent of the controls but I cant get to the Taggededge itself.). I want to be able to delete the edge and thought I'd ask here as you are the author of this piece of code.</li>\r\n</ol>\r\n<p>Sincerely.</p>\r\n<p>rootme</p>",
    "PostedDate": "2010-03-25T23:53:59.9-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "423940",
    "ThreadId": "72119",
    "Html": "<p>Hello rootme,</p>\r\n<p>I'm glad to hear the solution works for you.</p>\r\n<p>Your question about intercepting the MouseDown event is interesting. I don't have the project at hand, so I can only tell you what I would do and provide some pointers.</p>\r\n<p>What you *really* want to do is not catch MouseDown, but delete the edge. You have a reference to your tagged edge in the EdgeLabelControl: it's the Content property (because it's a ContentControl). So I would define an interface, say:</p>\r\n<p>interface IEdgeCommand<br>{<br>&nbsp;&nbsp;&nbsp; void DoOperation();<br>}<br><br>Implement this interface on your TaggedEdge:</p>\r\n<p>class MyTaggedEdge: TaggedEdge&lt;whatever,whatever&gt;, IEdgeCommand<br>{<br>&nbsp;&nbsp;&nbsp; ... (make sure you have everything you&nbsp;need to perform whatever you&nbsp;want here)...<br>}</p>\r\n<p>...and finally handle the MouseDown event in the EdgeLabelControl, where I would cast the Content property to IEdgeCommand, and call the function.</p>\r\n<p>Once you're in your tagged edge, you're home free.</p>\r\n<p>That's, on the top of my head, how I would do it. Let me know what develops &lt;g&gt;.</p>\r\n<p>vvdb</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-03-26T00:10:33.997-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "424829",
    "ThreadId": "72119",
    "Html": "<p>Perfect!!!</p>\r\n<p>Thank you very much!</p>\r\n<p>Regards,</p>\r\n<p>rootme</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-03-29T01:32:27.88-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "426035",
    "ThreadId": "72119",
    "Html": "<p>Thanks for the solution, I find it very useful!</p>\r\n<p>Thanks vvdb and rootme.</p>",
    "PostedDate": "2010-03-31T07:55:09.463-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "446581",
    "ThreadId": "72119",
    "Html": "Hey wdb,\r\n\r\nIts me again.\r\n\r\nIs it possible to create different &quot;styles&quot; for the tagged edges on one graph?\r\n\r\nI would like different edges e.g:\r\n1. Red Line\r\n2. Stroked Line (e.g. - - - - - - - - - - - - )\r\n3. Bold Line\r\n4. etc.\r\nAll on one graph.\r\n\r\nIs this possible at all?\r\n\r\nCan you propose how I would go about achieving this?\r\n\r\nThank you\r\n\r\nrootme",
    "PostedDate": "2010-05-24T03:23:41.07-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "460191",
    "ThreadId": "72119",
    "Html": "Hi, i'm a little new at this and having some trouble using this code.\r\n<br><br>\r\nFirst of all i found these odd phrases in the code:\r\n;/span&gt; (in the xmal)\r\not;&gt; (int the C#)\r\nI guest it's just typos so i deleted them.\r\n<br><br>\r\nBut the real problem is that I don't really know where to put the xaml code. If you could provide a working example it would be great.\r\nIf not - that's my xaml code which is drawing the graph, where should i put the other xaml code? should i open a new wpf file? I tried that and it won't build because of the first line with the x:key not being inside IDictionary tag. And even if it is built, how should i initialize the wpf component?\r\n<br><br>\r\nthanks\r\n<br><br>\r\n&lt;Window x:Class=&quot;MyProject.Visualizer&quot;<br>\r\n    xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;<br>\r\n    xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;<br>\r\n    xmlns:Local=&quot;clr-namespace:MyProject&quot;<br>\r\n    xmlns:GraphSharp=&quot;clr-namespace:GraphSharp.Controls;assembly=GraphSharp.Controls&quot;<br>\r\n    xmlns:zoom=&quot;clr-namespace:WPFExtensions.Controls;assembly=WPFExtensions&quot;<br>\r\n    Title=&quot;Graph&quot;<br>\r\n    Height=&quot;900&quot; Width=&quot;900&quot;<br>\r\n    x:Name=&quot;root&quot;&gt;<br>\r\n&lt;Grid&gt;<br>\r\n&lt;zoom:ZoomControl&gt;<br>\r\n                            &lt;GraphSharp:GraphLayout x:Name=&quot;graphLayout&quot;<br>\r\n                                    Graph=&quot;{Binding ElementName=root,Path=GraphToVisualize}&quot;<br>\r\n                                    LayoutAlgorithmType=&quot;FR&quot;<br>\r\n                                    OverlapRemovalAlgorithmType=&quot;FSA&quot;<br>\r\n                                    HighlightAlgorithmType=&quot;Simple&quot;<br>\r\n                                    /&gt;<br>\r\n&lt;/zoom:ZoomControl&gt;<br>\r\n&lt;/Grid&gt;<br>\r\n&lt;/Window&gt;<br>",
    "PostedDate": "2010-06-26T03:54:24.567-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "467126",
    "ThreadId": "72119",
    "Html": "<p>It is possible to create different styles for the tagged edges. Although I never did it, I would suggest looking at the Stroke, StrokeThickness, StrokeDashArray and StrokeDashCap in the Path tag</p>",
    "PostedDate": "2010-07-14T00:56:52.28-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "467170",
    "ThreadId": "72119",
    "Html": "<p>vvdb can you please guide me where to keep code...</p>\r\n<p>I have created new class and place EdgeLabelControl class code in it and replaced your given xaml code for edge style in generic.xaml</p>\r\n<p>I created following class in Graphsharp.Controls project</p>\r\n<div>\r\n<pre><pre> public class TaggedGraphLayout : GraphLayout, IBidirectionalGraph&gt;&gt;\r\n    {\r\n    }</pre>\r\n</pre>\r\n<pre>JUST WANTED TO MAKE SURE IF I AM ON RIGHT TRACK OR NOT..</pre>\r\n<pre>but WHEN I PUT THIS CODE IN LayoutAnalyzerViewModel CLASS </pre>\r\n</div>\r\n<div>\r\n<pre>       <pre>     var g = new BidirectionalGraph&gt;();\r\n\r\n            //add the vertices to the graph\r\n            Person[] vertices = new Person[5];\r\n            for (int i = 0; i &lt; 5; i++)\r\n            {\r\n                vertices[i] = new Person { FirstName = String.Format(&quot;FirstName{0}&quot;, i), LastName = String.Format(&quot;LastName{0}&quot;, i) };\r\n                g.AddVertex(vertices[i]);\r\n            }\r\n\r\n            //add some edges to the graph\r\n            g.AddEdge(new TaggedEdge(vertices[0], vertices[1], &quot;Tag1&quot;));\r\n            g.AddEdge(new TaggedEdge(vertices[1], vertices[2], &quot;Tag2&quot;));\r\n            g.AddEdge(new TaggedEdge(vertices[2], vertices[3], &quot;Tag3&quot;));\r\n            g.AddEdge(new TaggedEdge(vertices[3], vertices[1], &quot;Tag4&quot;));\r\n            g.AddEdge(new TaggedEdge(vertices[1], vertices[4], &quot;Tag5&quot;));\r\n</pre>\r\n</pre>\r\n</div>\r\n<p>&nbsp;SO FINAL SHAPE OF CLASS IS ....&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<pre>public partial class LayoutAnalyzerViewModel\r\n\t{\r\n\t\tpartial void CreateSampleGraphs()\r\n\t\t{\r\n            //#region SimpleTree\r\n\r\n            //var graph = new PocGraph();\r\n\r\n            //for (int i = 0; i &lt; 15; i++)\r\n            //{\r\n            //    var v = new PocVertex(i.ToString());\r\n            //    graph.AddVertex(v);\r\n            //}\r\n\r\n            //graph.AddEdge(new PocEdge(&quot;0to1 node&quot;, graph.Vertices.ElementAt(0), graph.Vertices.ElementAt(1)));\r\n            //graph.AddEdge(new PocEdge(&quot;1to2 node&quot;, graph.Vertices.ElementAt(1), graph.Vertices.ElementAt(2)));\r\n            //graph.AddEdge(new PocEdge(&quot;2to3 node&quot;, graph.Vertices.ElementAt(2), graph.Vertices.ElementAt(3)));\r\n            //graph.AddEdge(new PocEdge(&quot;2to4 node&quot;, graph.Vertices.ElementAt(2), graph.Vertices.ElementAt(4)));\r\n            //graph.AddEdge(new PocEdge(&quot;0to5 node&quot;, graph.Vertices.ElementAt(0), graph.Vertices.ElementAt(5)));\r\n            //graph.AddEdge(new PocEdge(&quot;1to7 node&quot;, graph.Vertices.ElementAt(1), graph.Vertices.ElementAt(7)));\r\n            //graph.AddEdge(new PocEdge(&quot;4to6 node&quot;, graph.Vertices.ElementAt(4), graph.Vertices.ElementAt(6)));\r\n            //graph.AddEdge(new PocEdge(&quot;10to11 node&quot;, graph.Vertices.ElementAt(5), graph.Vertices.ElementAt(8)));\r\n            //graph.AddEdge(new PocEdge(&quot;11to12 node&quot;, graph.Vertices.ElementAt(6), graph.Vertices.ElementAt(9)));\r\n            //graph.AddEdge(new PocEdge(&quot;12to13 node&quot;, graph.Vertices.ElementAt(7), graph.Vertices.ElementAt(10)));\r\n            //graph.AddEdge(new PocEdge(&quot;12to14 node&quot;, graph.Vertices.ElementAt(8), graph.Vertices.ElementAt(11)));\r\n            //graph.AddEdge(new PocEdge(&quot;10to15 node&quot;, graph.Vertices.ElementAt(9), graph.Vertices.ElementAt(12)));\r\n            //graph.AddEdge(new PocEdge(&quot;11to17 node&quot;, graph.Vertices.ElementAt(10), graph.Vertices.ElementAt(13)));\r\n            //graph.AddEdge(new PocEdge(&quot;14to16 node&quot;, graph.Vertices.ElementAt(11), graph.Vertices.ElementAt(14)));\r\n\r\n            //GraphModels.Add(new GraphModel(&quot;Fa&quot;, graph));\r\n\r\n            //#endregion\r\n\r\n            #region SimpleTree\r\n\r\n            var g = new BidirectionalGraph&gt;();\r\n\r\n            //add the vertices to the graph\r\n            Person[] vertices = new Person[5];\r\n            for (int i = 0; i &lt; 5; i++)\r\n            {\r\n                vertices[i] = new Person(i.ToString());\r\n                g.AddVertex(vertices[i]);\r\n            }\r\n\r\n            //add some edges to the graph\r\n            g.AddEdge(new TaggedEdge(vertices[0], vertices[1], &quot;Tag1&quot;));\r\n            g.AddEdge(new TaggedEdge(vertices[1], vertices[2], &quot;Tag2&quot;));\r\n            g.AddEdge(new TaggedEdge(vertices[2], vertices[3], &quot;Tag3&quot;));\r\n            g.AddEdge(new TaggedEdge(vertices[3], vertices[1], &quot;Tag4&quot;));\r\n            g.AddEdge(new TaggedEdge(vertices[1], vertices[4], &quot;Tag5&quot;));\r\n\r\n            GraphModels.Add(new GraphModel(&quot;Fa&quot;, g));\r\n\r\n            #endregion\r\n\t\t}\r\n\r\n        public class Person\r\n        {\r\n            public string FirstName { get; set; }\r\n            public string LastName { get; set; }\r\n        }\r\n\t}</pre>\r\n<p>&nbsp;</p>\r\n<p>AS SAMPLE APPLICATION HAS POCGRAPH CLASS SO I EXTEND THAT TOO</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<pre>public class GraphModel\r\n\t{\r\n\t\tpublic string Name { get; private set; }\r\n\t\tpublic PocGraph Graph { get; private set; }\r\n        public BidirectionalGraph&gt; BiGraph { get; private set; }\r\n\r\n\t\tpublic GraphModel(string name, PocGraph graph)\r\n\t\t{\r\n\t\t\tName = name;\r\n\t\t\tGraph = graph;\r\n\t\t}\r\n        public GraphModel(string name, BidirectionalGraph&gt; graph)\r\n        {\r\n            Name = name;\r\n            BiGraph = graph;\r\n        }\r\n\t}</pre>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>BUT NOT GETTING ANY VERTICES OR EDGES... PLEASE CORRECT ME WHERE AM WRONG..&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>IF Y OU CAN SEND ME SAMPLE CODE AT ADNANAMAN@GMAIL.COM, I WOULD BE VERY GRATEFUL.</p>",
    "PostedDate": "2010-07-14T03:15:17.81-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "576280",
    "ThreadId": "72119",
    "Html": "<p>Hello. Can somebody link zip'ed solution here? It will be very helpfull to understand (debug) it.<br />greetings :]</p>",
    "PostedDate": "2011-03-06T07:16:52.987-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "601204",
    "ThreadId": "72119",
    "Html": "<p>Thanks <a class=\"UserProfileLink\" href=\"http://www.codeplex.com/site/users/view/vvdb\">vvdb</a> for the great solution!&nbsp; After much WPF agonizing, this was the perfect answer to my problems.&nbsp; I just thought I'd contribute my small embellishment: at first my edge labels were hard to see because they intersect with the edge itself.&nbsp; To move them slightly to the side, just replace this line:</p>\r\n<p>&nbsp;</p>\r\n<pre>p.Offset(edgeLength * Math.Cos(angleBetweenPoints), -edgeLength * Math.Sin(angleBetweenPoints));<br /><br /><br />with these five lines:<br /><br /><br />public float x = 12.5f, y = 12.5f;<br />double sin = Math.Sin(angleBetweenPoints);<br />double cos = Math.Cos(angleBetweenPoints);<br />double sign = sin * cos / Math.Abs(sin * cos);<br />p.Offset(x * sin * sign + edgeLength * cos, y * cos * sign - edgeLength * sin);<br /></pre>",
    "PostedDate": "2011-04-21T12:30:21.707-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "668548",
    "ThreadId": "72119",
    "Html": "<p>Hello,</p>\r\n<p>I've been trying to use this solution in my graph demo. Though I cannot find out why I get the following error:</p>\r\n<p>\"Object reference not set to an instance of an object.\"</p>\r\n<p>Here is my code:</p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">ResourceDictionary</span> <span style=\"color: red;\">xmlns</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">http://schemas.microsoft.com/winfx/2006/xaml/presentation</span><span style=\"color: black;\">\"</span>\r\n                    <span style=\"color: red;\">xmlns:x</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">http://schemas.microsoft.com/winfx/2006/xaml</span><span style=\"color: black;\">\"</span>\r\n                    <span style=\"color: red;\">xmlns:local</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">clr-namespace:GraphSharpDemo</span><span style=\"color: black;\">\"</span>\r\n                    <span style=\"color: red;\">xmlns:graphsharp</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">clr-namespace:GraphSharp.Controls;assembly=GraphSharp.Controls</span><span style=\"color: black;\">\"</span> \r\n\t<span style=\"color: red;\">xmlns:Converters</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">clr-namespace:GraphSharp.Converters;assembly=GraphSharp.Controls</span><span style=\"color: black;\">\"</span>\r\n\t<span style=\"color: red;\">xmlns:WPFExtensions_AttachedBehaviours</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">clr-namespace:WPFExtensions.AttachedBehaviours;assembly=WPFExtensions</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">&gt;</span>\r\n\r\n    <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Converters</span><span style=\"color: blue;\">:</span><span style=\"color: #a31515;\">EdgeRouteToPathConverter</span> <span style=\"color: red;\">x:Key</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">routeToPathConverter</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n\r\n    <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Style</span> <span style=\"color: red;\">TargetType</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{x:Type graphsharp:EdgeControl}</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">&gt;</span>\r\n        <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Setter</span> <span style=\"color: red;\">Property</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Template</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">&gt;</span>\r\n            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Setter.Value</span><span style=\"color: blue;\">&gt;</span>\r\n                <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">ControlTemplate</span> <span style=\"color: red;\">TargetType</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{x:Type graphsharp:EdgeControl}</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">&gt;</span>\r\n                    <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Canvas</span><span style=\"color: blue;\">&gt;</span>\r\n                        <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Path</span> <span style=\"color: red;\">Stroke</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{TemplateBinding Foreground}</span><span style=\"color: black;\">\"</span>\r\n                          <span style=\"color: red;\">StrokeThickness</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">2</span><span style=\"color: black;\">\"</span>\r\n                          <span style=\"color: red;\">MinWidth</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">1</span><span style=\"color: black;\">\"</span>\r\n                          <span style=\"color: red;\">MinHeight</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">1</span><span style=\"color: black;\">\"</span>\r\n                          <span style=\"color: red;\">x:Name</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">edgePath</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">&gt;</span>\r\n                            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Path.Data</span><span style=\"color: blue;\">&gt;</span>\r\n                                <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">PathGeometry</span><span style=\"color: blue;\">&gt;</span>\r\n                                    <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">PathGeometry.Figures</span><span style=\"color: blue;\">&gt;</span>\r\n                                        <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">MultiBinding</span> <span style=\"color: red;\">Converter</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{StaticResource routeToPathConverter}</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">&gt;</span>\r\n                                            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Binding</span> <span style=\"color: red;\">RelativeSource</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{RelativeSource TemplatedParent}</span><span style=\"color: black;\">\"</span>\r\n                                                 <span style=\"color: red;\">Path</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Source.(Controls:GraphCanvas.X)</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n                                            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Binding</span> <span style=\"color: red;\">RelativeSource</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{RelativeSource TemplatedParent}</span><span style=\"color: black;\">\"</span>\r\n                                                 <span style=\"color: red;\">Path</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Source.(Controls:GraphCanvas.Y)</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n                                            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Binding</span> <span style=\"color: red;\">RelativeSource</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{RelativeSource TemplatedParent}</span><span style=\"color: black;\">\"</span>\r\n                                                 <span style=\"color: red;\">Path</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Source.ActualWidth</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n                                            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Binding</span> <span style=\"color: red;\">RelativeSource</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{RelativeSource TemplatedParent}</span><span style=\"color: black;\">\"</span>\r\n                                                <span style=\"color: red;\">Path</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Source.ActualHeight</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n                                            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Binding</span> <span style=\"color: red;\">RelativeSource</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{RelativeSource TemplatedParent}</span><span style=\"color: black;\">\"</span>\r\n                                                 <span style=\"color: red;\">Path</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Target.(Controls:GraphCanvas.X)</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n                                            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Binding</span> <span style=\"color: red;\">RelativeSource</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{RelativeSource TemplatedParent}</span><span style=\"color: black;\">\"</span>\r\n                                                 <span style=\"color: red;\">Path</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Target.(Controls:GraphCanvas.Y)</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n                                            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Binding</span> <span style=\"color: red;\">RelativeSource</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{RelativeSource TemplatedParent}</span><span style=\"color: black;\">\"</span>\r\n                                                 <span style=\"color: red;\">Path</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Target.ActualWidth</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n                                            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Binding</span> <span style=\"color: red;\">RelativeSource</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{RelativeSource TemplatedParent}</span><span style=\"color: black;\">\"</span>\r\n                                                 <span style=\"color: red;\">Path</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Target.ActualHeight</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n                                            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Binding</span> <span style=\"color: red;\">RelativeSource</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{RelativeSource TemplatedParent}</span><span style=\"color: black;\">\"</span>\r\n                                                 <span style=\"color: red;\">Path</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">RoutePoints</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n                                        <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">MultiBinding</span><span style=\"color: blue;\">&gt;</span>\r\n                                     <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">PathGeometry.Figures</span><span style=\"color: blue;\">&gt;</span>\r\n                                <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">PathGeometry</span><span style=\"color: blue;\">&gt;</span>\r\n                            <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">Path.Data</span><span style=\"color: blue;\">&gt;</span>\r\n                        <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">Path</span><span style=\"color: blue;\">&gt;</span>\r\n                        <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">local</span><span style=\"color: blue;\">:</span><span style=\"color: #a31515;\">EdgeLabelControl</span> <span style=\"color: red;\">Content</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{Binding Edge.Tag, RelativeSource={RelativeSource TemplatedParent}}</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n                    <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">Canvas</span><span style=\"color: blue;\">&gt;</span>\r\n                <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">ControlTemplate</span><span style=\"color: blue;\">&gt;</span>\r\n            <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">Setter.Value</span><span style=\"color: blue;\">&gt;</span>\r\n        <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">Setter</span><span style=\"color: blue;\">&gt;</span>\r\n    <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">Style</span><span style=\"color: blue;\">&gt;</span>\r\n</pre>\r\n<pre>Does anybody have an idea what the problem is? </pre>\r\n<pre>Thank you.</pre>\r\n</div>",
    "PostedDate": "2011-09-07T04:35:07.313-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "668549",
    "ThreadId": "72119",
    "Html": "<p>Hello,</p>\n<p>I've been trying to use this solution in my graph demo. Though I cannot find out why I get the following error:</p>\n<p>\"Object reference not set to an instance of an object.\"</p>\n<p>Here is my code:</p>\n<div style=\"background-color: white; color: black;\">\n<pre><span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">ResourceDictionary</span> <span style=\"color: red;\">xmlns</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">http://schemas.microsoft.com/winfx/2006/xaml/presentation</span><span style=\"color: black;\">\"</span>\r\n                    <span style=\"color: red;\">xmlns:x</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">http://schemas.microsoft.com/winfx/2006/xaml</span><span style=\"color: black;\">\"</span>\r\n                    <span style=\"color: red;\">xmlns:local</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">clr-namespace:GraphSharpDemo</span><span style=\"color: black;\">\"</span>\r\n                    <span style=\"color: red;\">xmlns:graphsharp</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">clr-namespace:GraphSharp.Controls;assembly=GraphSharp.Controls</span><span style=\"color: black;\">\"</span> \r\n\t<span style=\"color: red;\">xmlns:Converters</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">clr-namespace:GraphSharp.Converters;assembly=GraphSharp.Controls</span><span style=\"color: black;\">\"</span>\r\n\t<span style=\"color: red;\">xmlns:WPFExtensions_AttachedBehaviours</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">clr-namespace:WPFExtensions.AttachedBehaviours;assembly=WPFExtensions</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">&gt;</span>\r\n\r\n    <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Converters</span><span style=\"color: blue;\">:</span><span style=\"color: #a31515;\">EdgeRouteToPathConverter</span> <span style=\"color: red;\">x:Key</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">routeToPathConverter</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n\r\n    <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Style</span> <span style=\"color: red;\">TargetType</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{x:Type graphsharp:EdgeControl}</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">&gt;</span>\r\n        <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Setter</span> <span style=\"color: red;\">Property</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Template</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">&gt;</span>\r\n            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Setter.Value</span><span style=\"color: blue;\">&gt;</span>\r\n                <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">ControlTemplate</span> <span style=\"color: red;\">TargetType</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{x:Type graphsharp:EdgeControl}</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">&gt;</span>\r\n                    <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Canvas</span><span style=\"color: blue;\">&gt;</span>\r\n                        <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Path</span> <span style=\"color: red;\">Stroke</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{TemplateBinding Foreground}</span><span style=\"color: black;\">\"</span>\r\n                          <span style=\"color: red;\">StrokeThickness</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">2</span><span style=\"color: black;\">\"</span>\r\n                          <span style=\"color: red;\">MinWidth</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">1</span><span style=\"color: black;\">\"</span>\r\n                          <span style=\"color: red;\">MinHeight</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">1</span><span style=\"color: black;\">\"</span>\r\n                          <span style=\"color: red;\">x:Name</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">edgePath</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">&gt;</span>\r\n                            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Path.Data</span><span style=\"color: blue;\">&gt;</span>\r\n                                <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">PathGeometry</span><span style=\"color: blue;\">&gt;</span>\r\n                                    <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">PathGeometry.Figures</span><span style=\"color: blue;\">&gt;</span>\r\n                                        <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">MultiBinding</span> <span style=\"color: red;\">Converter</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{StaticResource routeToPathConverter}</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">&gt;</span>\r\n                                            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Binding</span> <span style=\"color: red;\">RelativeSource</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{RelativeSource TemplatedParent}</span><span style=\"color: black;\">\"</span>\r\n                                                 <span style=\"color: red;\">Path</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Source.(Controls:GraphCanvas.X)</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n                                            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Binding</span> <span style=\"color: red;\">RelativeSource</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{RelativeSource TemplatedParent}</span><span style=\"color: black;\">\"</span>\r\n                                                 <span style=\"color: red;\">Path</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Source.(Controls:GraphCanvas.Y)</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n                                            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Binding</span> <span style=\"color: red;\">RelativeSource</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{RelativeSource TemplatedParent}</span><span style=\"color: black;\">\"</span>\r\n                                                 <span style=\"color: red;\">Path</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Source.ActualWidth</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n                                            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Binding</span> <span style=\"color: red;\">RelativeSource</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{RelativeSource TemplatedParent}</span><span style=\"color: black;\">\"</span>\r\n                                                <span style=\"color: red;\">Path</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Source.ActualHeight</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n                                            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Binding</span> <span style=\"color: red;\">RelativeSource</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{RelativeSource TemplatedParent}</span><span style=\"color: black;\">\"</span>\r\n                                                 <span style=\"color: red;\">Path</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Target.(Controls:GraphCanvas.X)</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n                                            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Binding</span> <span style=\"color: red;\">RelativeSource</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{RelativeSource TemplatedParent}</span><span style=\"color: black;\">\"</span>\r\n                                                 <span style=\"color: red;\">Path</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Target.(Controls:GraphCanvas.Y)</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n                                            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Binding</span> <span style=\"color: red;\">RelativeSource</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{RelativeSource TemplatedParent}</span><span style=\"color: black;\">\"</span>\r\n                                                 <span style=\"color: red;\">Path</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Target.ActualWidth</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n                                            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Binding</span> <span style=\"color: red;\">RelativeSource</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{RelativeSource TemplatedParent}</span><span style=\"color: black;\">\"</span>\r\n                                                 <span style=\"color: red;\">Path</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Target.ActualHeight</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n                                            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Binding</span> <span style=\"color: red;\">RelativeSource</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{RelativeSource TemplatedParent}</span><span style=\"color: black;\">\"</span>\r\n                                                 <span style=\"color: red;\">Path</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">RoutePoints</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n                                        <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">MultiBinding</span><span style=\"color: blue;\">&gt;</span>\r\n                                     <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">PathGeometry.Figures</span><span style=\"color: blue;\">&gt;</span>\r\n                                <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">PathGeometry</span><span style=\"color: blue;\">&gt;</span>\r\n                            <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">Path.Data</span><span style=\"color: blue;\">&gt;</span>\r\n                        <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">Path</span><span style=\"color: blue;\">&gt;</span>\r\n                        <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">local</span><span style=\"color: blue;\">:</span><span style=\"color: #a31515;\">EdgeLabelControl</span> <span style=\"color: red;\">Content</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{Binding Edge.Tag, RelativeSource={RelativeSource TemplatedParent}}</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n                    <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">Canvas</span><span style=\"color: blue;\">&gt;</span>\r\n                <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">ControlTemplate</span><span style=\"color: blue;\">&gt;</span>\r\n            <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">Setter.Value</span><span style=\"color: blue;\">&gt;</span>\r\n        <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">Setter</span><span style=\"color: blue;\">&gt;</span>\r\n    <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">Style</span><span style=\"color: blue;\">&gt;</span>\r\n</pre>\n</div>\n<p>Does anybody have an idea what the problem is?</p>\n<p>Thank you.</p>\n<p>EDIT: The real example ends with the &lt;/ResourceDictionary&gt; tag. I forgot to insert it into this snippet.</p>",
    "PostedDate": "2011-09-07T04:35:07.713-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "689043",
    "ThreadId": "72119",
    "Html": "<p>Hello,</p>\r\n<p>Can somebody give me example that works on email: davidart@tut.by.&nbsp;Thanks...</p>",
    "PostedDate": "2011-10-25T07:37:02.39-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "689646",
    "ThreadId": "72119",
    "Html": "<p>Hello,</p>\r\n<p>I have same problem as bmp. Error: \"Object reference not set to an instance of an object.\" Can somebody help me!?</p>\r\n<p>Thank you.</p>",
    "PostedDate": "2011-10-26T07:43:25.937-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "705998",
    "ThreadId": "72119",
    "Html": "<p>Very useful code!</p>\r\n<p>I modified this code slightly in order to allow ContextMenues as well as tags. I changed the base class and added the code suggested by&nbsp;<a class=\"UserProfileLink\" href=\"http://www.codeplex.com/site/users/view/davidsvaughn\">davidsvaughn</a>:</p>\r\n<p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre>    <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">class</span> EdgeContentPresenter : ContentPresenter\r\n    {\r\n        <span style=\"color: blue;\">public</span> EdgeContentPresenter()\r\n        {\r\n            LayoutUpdated += <span style=\"color: blue;\">new</span> EventHandler(EdgeContentPresenter_LayoutUpdated);\r\n        }\r\n\r\n        <span style=\"color: blue;\">private</span> EdgeControl GetEdgeControl(DependencyObject parent)\r\n        {\r\n            <span style=\"color: blue;\">while</span> (parent != <span style=\"color: blue;\">null</span>)\r\n                <span style=\"color: blue;\">if</span> (parent <span style=\"color: blue;\">is</span> EdgeControl)\r\n                    <span style=\"color: blue;\">return</span> (EdgeControl)parent;\r\n                <span style=\"color: blue;\">else</span>\r\n                    parent = VisualTreeHelper.GetParent(parent);\r\n            <span style=\"color: blue;\">return</span> <span style=\"color: blue;\">null</span>;\r\n        }\r\n\r\n        <span style=\"color: blue;\">private</span> <span style=\"color: blue;\">static</span> <span style=\"color: blue;\">double</span> GetAngleBetweenPoints(Point point1, Point point2)\r\n        {\r\n            <span style=\"color: blue;\">return</span> Math.Atan2(point1.Y - point2.Y, point2.X - point1.X);\r\n        }\r\n\r\n        <span style=\"color: blue;\">private</span> <span style=\"color: blue;\">static</span> <span style=\"color: blue;\">double</span> GetDistanceBetweenPoints(Point point1, Point point2)\r\n        {\r\n            <span style=\"color: blue;\">return</span> Math.Sqrt(Math.Pow(point2.X - point1.X, 2) + Math.Pow(point2.Y - point1.Y, 2));\r\n        }\r\n\r\n        <span style=\"color: blue;\">private</span> <span style=\"color: blue;\">static</span> <span style=\"color: blue;\">double</span> GetLabelDistance(<span style=\"color: blue;\">double</span> edgeLength)\r\n        {\r\n            <span style=\"color: blue;\">return</span> edgeLength / 2;  <span style=\"color: green;\">// set the label halfway the length of the edge</span>\r\n        }\r\n\r\n        <span style=\"color: blue;\">void</span> EdgeContentPresenter_LayoutUpdated(<span style=\"color: blue;\">object</span> sender, EventArgs e)\r\n        {\r\n            <span style=\"color: blue;\">if</span> (!IsLoaded)\r\n                <span style=\"color: blue;\">return</span>;\r\n            <span style=\"color: blue;\">var</span> edgeControl = GetEdgeControl(VisualParent);\r\n            <span style=\"color: blue;\">if</span> (edgeControl == <span style=\"color: blue;\">null</span>)\r\n                <span style=\"color: blue;\">return</span>;\r\n            <span style=\"color: blue;\">var</span> source = edgeControl.Source;\r\n            <span style=\"color: blue;\">var</span> p1 = <span style=\"color: blue;\">new</span> Point(GraphCanvas.GetX(source), GraphCanvas.GetY(source));\r\n            <span style=\"color: blue;\">var</span> target = edgeControl.Target;\r\n            <span style=\"color: blue;\">var</span> p2 = <span style=\"color: blue;\">new</span> Point(GraphCanvas.GetX(target), GraphCanvas.GetY(target));\r\n\r\n            <span style=\"color: blue;\">double</span> edgeLength;\r\n            <span style=\"color: blue;\">var</span> routePoints = edgeControl.RoutePoints;\r\n            <span style=\"color: blue;\">if</span> (routePoints == <span style=\"color: blue;\">null</span>)\r\n                <span style=\"color: green;\">// the edge is a single segment (p1,p2)</span>\r\n                edgeLength = GetLabelDistance(GetDistanceBetweenPoints(p1, p2));\r\n            <span style=\"color: blue;\">else</span>\r\n            {\r\n                <span style=\"color: green;\">// the edge has one or more segments</span>\r\n                <span style=\"color: green;\">// compute the total length of all the segments</span>\r\n                edgeLength = 0;\r\n                <span style=\"color: blue;\">for</span> (<span style=\"color: blue;\">int</span> i = 0; i &lt;= routePoints.Length; ++i)\r\n                    <span style=\"color: blue;\">if</span> (i == 0)\r\n                        edgeLength += GetDistanceBetweenPoints(p1, routePoints[0]);\r\n                    <span style=\"color: blue;\">else</span> <span style=\"color: blue;\">if</span> (i == routePoints.Length)\r\n                        edgeLength += GetDistanceBetweenPoints(routePoints[routePoints.Length - 1], p2);\r\n                    <span style=\"color: blue;\">else</span>\r\n                        edgeLength += GetDistanceBetweenPoints(routePoints[i - 1], routePoints[i]);\r\n                <span style=\"color: green;\">// find the line segment where the half distance is located</span>\r\n                edgeLength = GetLabelDistance(edgeLength);\r\n                Point newp1 = p1;\r\n                Point newp2 = p2;\r\n                <span style=\"color: blue;\">for</span> (<span style=\"color: blue;\">int</span> i = 0; i &lt;= routePoints.Length; ++i)\r\n                {\r\n                    <span style=\"color: blue;\">double</span> lengthOfSegment;\r\n                    <span style=\"color: blue;\">if</span> (i == 0)\r\n                        lengthOfSegment = GetDistanceBetweenPoints(newp1 = p1, newp2 = routePoints[0]);\r\n                    <span style=\"color: blue;\">else</span> <span style=\"color: blue;\">if</span> (i == routePoints.Length)\r\n                        lengthOfSegment = GetDistanceBetweenPoints(newp1 = routePoints[routePoints.Length - 1], newp2 = p2);\r\n                    <span style=\"color: blue;\">else</span>\r\n                        lengthOfSegment = GetDistanceBetweenPoints(newp1 = routePoints[i - 1], newp2 = routePoints[i]);\r\n                    <span style=\"color: blue;\">if</span> (lengthOfSegment &gt;= edgeLength)\r\n                        <span style=\"color: blue;\">break</span>;\r\n                    edgeLength -= lengthOfSegment;\r\n                }\r\n                <span style=\"color: green;\">// redefine our edge points</span>\r\n                p1 = newp1;\r\n                p2 = newp2;\r\n            }\r\n            <span style=\"color: green;\">// align the point so that it  passes through the center of the label content</span>\r\n            <span style=\"color: blue;\">var</span> p = p1;\r\n            <span style=\"color: blue;\">var</span> desiredSize = DesiredSize;\r\n            p.Offset(-desiredSize.Width / 2, -desiredSize.Height / 2);\r\n\r\n            <span style=\"color: green;\">// move it \"edgLength\" on the segment</span>\r\n            <span style=\"color: blue;\">var</span> angleBetweenPoints = GetAngleBetweenPoints(p1, p2);\r\n            <span style=\"color: green;\">//p.Offset(edgeLength * Math.Cos(angleBetweenPoints), -edgeLength * Math.Sin(angleBetweenPoints));</span>\r\n            <span style=\"color: blue;\">float</span> x = 12.5f, y = 12.5f;\r\n            <span style=\"color: blue;\">double</span> sin = Math.Sin(angleBetweenPoints);\r\n            <span style=\"color: blue;\">double</span> cos = Math.Cos(angleBetweenPoints);\r\n            <span style=\"color: blue;\">double</span> sign = sin * cos / Math.Abs(sin * cos);\r\n            p.Offset(x * sin * sign + edgeLength * cos, y * cos * sign - edgeLength * sin);\r\n            Arrange(<span style=\"color: blue;\">new</span> Rect(p, desiredSize));\r\n        }\r\n\r\n    }\r\n</pre>\r\n</div>\r\n</p>\r\n<p>This is the modified EdgeControl:</p>\r\n<p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre>        <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Converters</span><span style=\"color: blue;\">:</span><span style=\"color: #a31515;\">EdgeRouteToPathConverter</span> <span style=\"color: red;\">x:Key</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">routeToPathConverter</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n        <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Style</span> <span style=\"color: red;\">TargetType</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{x:Type graphsharp:EdgeControl}</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">&gt;</span>\r\n            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Setter</span> <span style=\"color: red;\">Property</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Template</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">&gt;</span>\r\n                <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Setter.Value</span><span style=\"color: blue;\">&gt;</span>\r\n                    <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">ControlTemplate</span> <span style=\"color: red;\">TargetType</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{x:Type graphsharp:EdgeControl}</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">&gt;</span>\r\n                        <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Canvas</span><span style=\"color: blue;\">&gt;</span>\r\n                            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Path</span> <span style=\"color: red;\">Stroke</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{TemplateBinding Foreground}</span><span style=\"color: black;\">\"</span>\r\n                                <span style=\"color: red;\">StrokeThickness</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{TemplateBinding StrokeThickness}</span><span style=\"color: black;\">\"</span>\r\n                                <span style=\"color: red;\">MinWidth</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">1</span><span style=\"color: black;\">\"</span>\r\n                                <span style=\"color: red;\">MinHeight</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">1</span><span style=\"color: black;\">\"</span>\r\n                                <span style=\"color: red;\">ToolTip</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{TemplateBinding ToolTip}</span><span style=\"color: black;\">\"</span>\r\n                                <span style=\"color: red;\">x:Name</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">edgePath</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">&gt;</span>\r\n                                <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Path.Data</span><span style=\"color: blue;\">&gt;</span>\r\n                                    <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">PathGeometry</span><span style=\"color: blue;\">&gt;</span>\r\n                                        <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">PathGeometry.Figures</span><span style=\"color: blue;\">&gt;</span>\r\n                                            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">MultiBinding</span> <span style=\"color: red;\">Converter</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{StaticResource routeToPathConverter}</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">&gt;</span>\r\n                                                <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Binding</span> <span style=\"color: red;\">RelativeSource</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{RelativeSource TemplatedParent}</span><span style=\"color: black;\">\"</span>\r\n                                                 <span style=\"color: red;\">Path</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Source.(graphsharp:GraphCanvas.X)</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n                                                <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Binding</span> <span style=\"color: red;\">RelativeSource</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{RelativeSource TemplatedParent}</span><span style=\"color: black;\">\"</span>\r\n                                                 <span style=\"color: red;\">Path</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Source.(graphsharp:GraphCanvas.Y)</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n                                                <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Binding</span> <span style=\"color: red;\">RelativeSource</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{RelativeSource TemplatedParent}</span><span style=\"color: black;\">\"</span>\r\n                                                 <span style=\"color: red;\">Path</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Source.ActualWidth</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n                                                <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Binding</span> <span style=\"color: red;\">RelativeSource</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{RelativeSource TemplatedParent}</span><span style=\"color: black;\">\"</span>\r\n                                                 <span style=\"color: red;\">Path</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Source.ActualHeight</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n                                                <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Binding</span> <span style=\"color: red;\">RelativeSource</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{RelativeSource TemplatedParent}</span><span style=\"color: black;\">\"</span>\r\n                                                 <span style=\"color: red;\">Path</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Target.(graphsharp:GraphCanvas.X)</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n                                                <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Binding</span> <span style=\"color: red;\">RelativeSource</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{RelativeSource TemplatedParent}</span><span style=\"color: black;\">\"</span>\r\n                                                 <span style=\"color: red;\">Path</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Target.(graphsharp:GraphCanvas.Y)</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n                                                <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Binding</span> <span style=\"color: red;\">RelativeSource</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{RelativeSource TemplatedParent}</span><span style=\"color: black;\">\"</span>\r\n                                                 <span style=\"color: red;\">Path</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Target.ActualWidth</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n                                                <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Binding</span> <span style=\"color: red;\">RelativeSource</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{RelativeSource TemplatedParent}</span><span style=\"color: black;\">\"</span>\r\n                                                 <span style=\"color: red;\">Path</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Target.ActualHeight</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n                                                <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Binding</span> <span style=\"color: red;\">RelativeSource</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{RelativeSource TemplatedParent}</span><span style=\"color: black;\">\"</span>\r\n                                                 <span style=\"color: red;\">Path</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">RoutePoints</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n                                            <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">MultiBinding</span><span style=\"color: blue;\">&gt;</span>\r\n                                        <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">PathGeometry.Figures</span><span style=\"color: blue;\">&gt;</span>\r\n                                    <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">PathGeometry</span><span style=\"color: blue;\">&gt;</span>\r\n                                <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">Path.Data</span><span style=\"color: blue;\">&gt;</span>\r\n                            <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">Path</span><span style=\"color: blue;\">&gt;</span>\r\n                            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">local</span><span style=\"color: blue;\">:</span><span style=\"color: #a31515;\">EdgeContentPresenter</span> <span style=\"color: red;\">Content</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{TemplateBinding Edge}</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n                        <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">Canvas</span><span style=\"color: blue;\">&gt;</span>\r\n                    <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">ControlTemplate</span><span style=\"color: blue;\">&gt;</span>\r\n                <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">Setter.Value</span><span style=\"color: blue;\">&gt;</span>\r\n            <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">Setter</span><span style=\"color: blue;\">&gt;</span>\r\n            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Setter</span> <span style=\"color: red;\">Property</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">graphsharp:GraphElementBehaviour.HighlightTrigger</span><span style=\"color: black;\">\"</span>\r\n                <span style=\"color: red;\">Value</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Setter</span> <span style=\"color: red;\">Property</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">MinWidth</span><span style=\"color: black;\">\"</span>\r\n                <span style=\"color: red;\">Value</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">3</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Setter</span> <span style=\"color: red;\">Property</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">MinHeight</span><span style=\"color: black;\">\"</span>\r\n                <span style=\"color: red;\">Value</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">3</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Setter</span> <span style=\"color: red;\">Property</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Background</span><span style=\"color: black;\">\"</span>\r\n                <span style=\"color: red;\">Value</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Red</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Setter</span> <span style=\"color: red;\">Property</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Foreground</span><span style=\"color: black;\">\"</span>\r\n                <span style=\"color: red;\">Value</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Silver</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Setter</span> <span style=\"color: red;\">Property</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Opacity</span><span style=\"color: black;\">\"</span>\r\n                <span style=\"color: red;\">Value</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">0.5</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Style.Triggers</span><span style=\"color: blue;\">&gt;</span>\r\n                <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Trigger</span> <span style=\"color: red;\">Property</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">graphsharp:GraphElementBehaviour.IsHighlighted</span><span style=\"color: black;\">\"</span>\r\n                     <span style=\"color: red;\">Value</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">True</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">&gt;</span>\r\n                    <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Setter</span> <span style=\"color: red;\">Property</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Foreground</span><span style=\"color: black;\">\"</span>\r\n                        <span style=\"color: red;\">Value</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Black</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n                <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">Trigger</span><span style=\"color: blue;\">&gt;</span>\r\n                <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Trigger</span> <span style=\"color: red;\">Property</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">graphsharp:GraphElementBehaviour.IsSemiHighlighted</span><span style=\"color: black;\">\"</span>\r\n                     <span style=\"color: red;\">Value</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">True</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">&gt;</span>\r\n                    <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Setter</span> <span style=\"color: red;\">Property</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Foreground</span><span style=\"color: black;\">\"</span>\r\n                        <span style=\"color: red;\">Value</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Yellow</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n                <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">Trigger</span><span style=\"color: blue;\">&gt;</span>\r\n                <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">MultiTrigger</span><span style=\"color: blue;\">&gt;</span>\r\n                    <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">MultiTrigger.Conditions</span><span style=\"color: blue;\">&gt;</span>\r\n                        <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Condition</span> <span style=\"color: red;\">Property</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">graphsharp:GraphElementBehaviour.IsSemiHighlighted</span><span style=\"color: black;\">\"</span>\r\n                               <span style=\"color: red;\">Value</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">True</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n                        <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Condition</span> <span style=\"color: red;\">Property</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">graphsharp:GraphElementBehaviour.SemiHighlightInfo</span><span style=\"color: black;\">\"</span>\r\n                               <span style=\"color: red;\">Value</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">InEdge</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n                    <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">MultiTrigger.Conditions</span><span style=\"color: blue;\">&gt;</span>\r\n                    <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Setter</span> <span style=\"color: red;\">Property</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Foreground</span><span style=\"color: black;\">\"</span>\r\n                        <span style=\"color: red;\">Value</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Red</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n                <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">MultiTrigger</span><span style=\"color: blue;\">&gt;</span>\r\n                <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">MultiTrigger</span><span style=\"color: blue;\">&gt;</span>\r\n                    <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">MultiTrigger.Conditions</span><span style=\"color: blue;\">&gt;</span>\r\n                        <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Condition</span> <span style=\"color: red;\">Property</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">graphsharp:GraphElementBehaviour.IsSemiHighlighted</span><span style=\"color: black;\">\"</span>\r\n                               <span style=\"color: red;\">Value</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">True</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n                        <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Condition</span> <span style=\"color: red;\">Property</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">graphsharp:GraphElementBehaviour.SemiHighlightInfo</span><span style=\"color: black;\">\"</span>\r\n                               <span style=\"color: red;\">Value</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">OutEdge</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n                    <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">MultiTrigger.Conditions</span><span style=\"color: blue;\">&gt;</span>\r\n                    <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Setter</span> <span style=\"color: red;\">Property</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Foreground</span><span style=\"color: black;\">\"</span>\r\n                        <span style=\"color: red;\">Value</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Blue</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n                <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">MultiTrigger</span><span style=\"color: blue;\">&gt;</span>\r\n            <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">Style.Triggers</span><span style=\"color: blue;\">&gt;</span>\r\n        <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">Style</span><span style=\"color: blue;\">&gt;</span>\r\n</pre>\r\n</div>\r\n</p>\r\n<p>Rendering of my Edge class:</p>\r\n<p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre>        <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">DataTemplate</span> <span style=\"color: red;\">DataType</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{x:Type local:ServerClientEdge}</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">&gt;</span>\r\n            <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">TextBlock</span> <span style=\"color: red;\">Text</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{Binding Path=Src.id}</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">&gt;</span>\r\n                <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">TextBlock.ContextMenu</span><span style=\"color: blue;\">&gt;</span>\r\n                    <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">ContextMenu</span><span style=\"color: blue;\">&gt;</span>\r\n                        <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">MenuItem</span> <span style=\"color: red;\">Header</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Delete</span><span style=\"color: black;\">\"</span> <span style=\"color: red;\">ToolTip</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Choose to delete ...</span><span style=\"color: black;\">\"</span> <span style=\"color: red;\">ToolTipService.ShowOnDisabled</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">True</span><span style=\"color: black;\">\"</span> <span style=\"color: red;\">Command</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{x:Static local:GraphViewModel.DeleteServerScriptToClientScriptCommand}</span><span style=\"color: black;\">\"</span> <span style=\"color: red;\">CommandParameter</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{Binding Path=Src}</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">/&gt;</span>\r\n                        <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">MenuItem</span> <span style=\"color: red;\">Header</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Foreach</span><span style=\"color: black;\">\"</span> <span style=\"color: red;\">ToolTip</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Choose to enable ...</span><span style=\"color: black;\">\"</span> <span style=\"color: red;\">ToolTipService.ShowOnDisabled</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">True</span><span style=\"color: black;\">\"</span> <span style=\"color: red;\">Command</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{x:Static local:GraphViewModel.ForeachServerScriptToClientScriptCommand}</span><span style=\"color: black;\">\"</span> <span style=\"color: red;\">CommandParameter</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{Binding Path=Src}</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">/&gt;</span>\r\n                        <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">MenuItem</span> <span style=\"color: red;\">Header</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Condition</span><span style=\"color: black;\">\"</span> <span style=\"color: red;\">ToolTip</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">Choose to edit ...</span><span style=\"color: black;\">\"</span> <span style=\"color: red;\">ToolTipService.ShowOnDisabled</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">True</span><span style=\"color: black;\">\"</span> <span style=\"color: red;\">Command</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{x:Static local:GraphViewModel.ConditionServerScriptToClientScriptCommand}</span><span style=\"color: black;\">\"</span> <span style=\"color: red;\">CommandParameter</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{Binding Path=Src}</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">/&gt;</span>\r\n                    <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">ContextMenu</span><span style=\"color: blue;\">&gt;</span>\r\n                <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">TextBlock.ContextMenu</span><span style=\"color: blue;\">&gt;</span>\r\n            <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">TextBlock</span><span style=\"color: blue;\">&gt;</span>\r\n        <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">DataTemplate</span><span style=\"color: blue;\">&gt;</span>\r\n</pre>\r\n</div>\r\n</p>\r\n<p>I have different types of edge classes, all based on :</p>\r\n<p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: blue;\">public</span> <span style=\"color: blue;\">class</span> CmdbEdge : Edge&lt;<span style=\"color: blue;\">object</span>&gt;\r\n    {\r\n        <span style=\"color: blue;\">public</span> CmdbEdge(<span style=\"color: blue;\">object</span> source, <span style=\"color: blue;\">object</span> target)\r\n            : <span style=\"color: blue;\">base</span>(source, target)\r\n        {\r\n        }\r\n    }\r\n</pre>\r\n</div>\r\n</p>\r\n<p>This is the one shown above:</p>\r\n<p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre>    <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">class</span> ServerClientEdge : CmdbEdge\r\n    {\r\n        <span style=\"color: blue;\">public</span> ServerScripts_ClientScripts Src { <span style=\"color: blue;\">get</span>; <span style=\"color: blue;\">set</span>; }\r\n\r\n        <span style=\"color: blue;\">public</span> ServerClientEdge(ServerScripts_ClientScripts sscs)\r\n            : <span style=\"color: blue;\">base</span>(sscs.ServerScript1, sscs.ClientScript1)\r\n        {\r\n            Src = sscs;\r\n        }\r\n\r\n    }\r\n</pre>\r\n</div>\r\n</p>",
    "PostedDate": "2011-12-01T10:27:23.263-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "711927",
    "ThreadId": "72119",
    "Html": "<p>somebody can upload the working library and samples with labels on the edges please</p>",
    "PostedDate": "2011-12-13T21:49:23.977-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "828019",
    "ThreadId": "72119",
    "Html": "<p>I'm getting the following error for this line of code in the xaml file</p>\r\n<p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre>&lt;Converters:EdgeRouteToPathConverter x:Key=<span style=\"color: #a31515;\">\"routeToPathConverter\"</span> /&gt;\r\n</pre>\r\n</div>\r\n</p>\r\n<p>The error is, \"A value of type EdgeRouteToPathConverter cannot be added to a collection or dictionary of type UIElementCollection\"</p>\r\n<p>Any ideas please?</p>",
    "PostedDate": "2012-04-24T11:45:57.113-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "954680",
    "ThreadId": "72119",
    "Html": "\r\n<p>Very useful code.</p>\r\n<p>I applied the code and it worked. But I have a problem, I need the labels to be aligned with the degree of the edge.</p>\r\n<p>Can somebody help me please?</p>\r\n<p>Thanks</p>\r\n",
    "PostedDate": "2012-12-11T09:41:47.437-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "954807",
    "ThreadId": "72119",
    "Html": "\r\n<p>For this one that stuff would do the trick:&nbsp;<a href=\"http://www.codeproject.com/Articles/30090/Text-On-A-Path-in-WPF\">http://www.codeproject.com/Articles/30090/Text-On-A-Path-in-WPF</a></p>\r\n<p>Modify the ControlTemplate of the EdgeControl using the stuff in the codeproject article.</p>\r\n",
    "PostedDate": "2012-12-11T14:37:25.72-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "993069",
    "ThreadId": "72119",
    "Html": "\r\n<p>Hi, I can't manage how to use your code. There's some example somewhere? I've created all the class and I get no errors, but I can't see nothing on screen!</p>\r\n",
    "PostedDate": "2013-01-28T07:01:52.09-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1041258",
    "ThreadId": "72119",
    "Html": "This code works fine:<br />\n<pre><code>&lt;Window x:Class=&quot;Finite.OutputWindow&quot;\n        xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;\n        xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;\n        xmlns:local=&quot;clr-namespace:Finite.Graphing&quot;\n        xmlns:graphsharp=&quot;clr-namespace:GraphSharp.Controls;assembly=GraphSharp.Controls&quot;\n        xmlns:Converters=&quot;clr-namespace:GraphSharp.Converters;assembly=GraphSharp.Controls&quot;\n        xmlns:WPFExtensions_AttachedBehaviours=&quot;clr-namespace:WPFExtensions.AttachedBehaviours;assembly=WPFExtensions&quot;\n        Title=&quot;OutputWindow&quot; Height=&quot;300&quot; Width=&quot;300&quot;\n        x:Name=&quot;root&quot;&gt;\n    \n    &lt;Grid&gt;\n        &lt;graphsharp:GraphLayout x:Name=&quot;graphLayout&quot;\n                                Graph=&quot;{Binding ElementName=root,Path=GraphToVizualize}&quot;\n                                LayoutAlgorithmType=&quot;Tree&quot;\n                                OverlapRemovalAlgorithmType=&quot;FSA&quot;\n                                /&gt;\n    &lt;/Grid&gt;\n&lt;/Window&gt;</code></pre>\n\nHowever, when I add resources, I get an error<br />\n<blockquote>\nXamlParseException: Prefix 'graphsharp' does not map to a namespace.<br />\n</blockquote>\n<pre><code>&lt;Window x:Class=&quot;Finite.OutputWindow&quot;\n        xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;\n        xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;\n        xmlns:local=&quot;clr-namespace:Finite.Graphing&quot;\n        xmlns:graphsharp=&quot;clr-namespace:GraphSharp.Controls;assembly=GraphSharp.Controls&quot;\n        xmlns:Converters=&quot;clr-namespace:GraphSharp.Converters;assembly=GraphSharp.Controls&quot;\n        xmlns:WPFExtensions_AttachedBehaviours=&quot;clr-namespace:WPFExtensions.AttachedBehaviours;assembly=WPFExtensions&quot;\n        Title=&quot;OutputWindow&quot; Height=&quot;300&quot; Width=&quot;300&quot;\n        x:Name=&quot;root&quot;&gt;\n    &lt;Window.Resources&gt;\n        &lt;Converters:EdgeRouteToPathConverter x:Key=&quot;routeToPathConverter&quot; /&gt;\n\n        &lt;Style TargetType=&quot;{x:Type graphsharp:EdgeControl}&quot;&gt;\n            &lt;Setter Property=&quot;Template&quot;&gt;\n                &lt;Setter.Value&gt;\n                    &lt;ControlTemplate TargetType=&quot;{x:Type graphsharp:EdgeControl}&quot;&gt;\n                        &lt;Canvas&gt;\n                            &lt;Path Stroke=&quot;{TemplateBinding Foreground}&quot;\n                          StrokeThickness=&quot;2&quot;\n                          MinWidth=&quot;1&quot;\n                          MinHeight=&quot;1&quot;\n                          x:Name=&quot;edgePath&quot;&gt;\n                                &lt;Path.Data&gt;\n                                    &lt;PathGeometry&gt;\n                                        &lt;PathGeometry.Figures&gt;\n                                            &lt;MultiBinding Converter=&quot;{StaticResource routeToPathConverter}&quot;&gt;\n                                                &lt;Binding RelativeSource=&quot;{RelativeSource TemplatedParent}&quot;\n                                                 Path=&quot;Source.(graphsharp:GraphCanvas.X)&quot; /&gt;\n                                                &lt;Binding RelativeSource=&quot;{RelativeSource TemplatedParent}&quot;\n                                                 Path=&quot;Source.(graphsharp:GraphCanvas.Y)&quot; /&gt;\n                                                &lt;Binding RelativeSource=&quot;{RelativeSource TemplatedParent}&quot;\n                                                 Path=&quot;Source.ActualWidth&quot; /&gt;\n                                                &lt;Binding RelativeSource=&quot;{RelativeSource TemplatedParent}&quot;\n                                                Path=&quot;Source.ActualHeight&quot; /&gt;\n                                                &lt;Binding RelativeSource=&quot;{RelativeSource TemplatedParent}&quot;\n                                                 Path=&quot;Target.(graphsharp:GraphCanvas.X)&quot; /&gt;\n                                                &lt;Binding RelativeSource=&quot;{RelativeSource TemplatedParent}&quot;\n                                                 Path=&quot;Target.(graphsharp:GraphCanvas.Y)&quot; /&gt;\n                                                &lt;Binding RelativeSource=&quot;{RelativeSource TemplatedParent}&quot;\n                                                 Path=&quot;Target.ActualWidth&quot; /&gt;\n                                                &lt;Binding RelativeSource=&quot;{RelativeSource TemplatedParent}&quot;\n                                                 Path=&quot;Target.ActualHeight&quot; /&gt;\n                                                &lt;Binding RelativeSource=&quot;{RelativeSource TemplatedParent}&quot;\n                                                 Path=&quot;RoutePoints&quot; /&gt;\n                                            &lt;/MultiBinding&gt;\n                                        &lt;/PathGeometry.Figures&gt;\n                                    &lt;/PathGeometry&gt;\n                                &lt;/Path.Data&gt;\n                            &lt;/Path&gt;\n                            &lt;local:EdgeLabelControl Content=&quot;{Binding Edge.Tag, RelativeSource={RelativeSource TemplatedParent}}&quot; /&gt;\n                        &lt;/Canvas&gt;\n                    &lt;/ControlTemplate&gt;\n                &lt;/Setter.Value&gt;\n            &lt;/Setter&gt;\n        &lt;/Style&gt;\n    &lt;/Window.Resources&gt;\n    \n    &lt;Grid&gt;\n        &lt;graphsharp:GraphLayout x:Name=&quot;graphLayout&quot;\n                                Graph=&quot;{Binding ElementName=root,Path=GraphToVizualize}&quot;\n                                LayoutAlgorithmType=&quot;Tree&quot;\n                                OverlapRemovalAlgorithmType=&quot;FSA&quot;\n                                /&gt;\n    &lt;/Grid&gt;\n&lt;/Window&gt;</code></pre>\n\nWhat am I doing wrong?<br />\n",
    "PostedDate": "2013-05-09T01:49:07.2-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1043647",
    "ThreadId": "72119",
    "Html": "This is a known VS2012 error. When you add XAML reference to a namespace in an external dll library visual designer get screwed however code compiles and works fine. Use VS2010 if you need designer features in this case until VS2012 is fixed.<br />\n",
    "PostedDate": "2013-05-14T22:31:56.657-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]