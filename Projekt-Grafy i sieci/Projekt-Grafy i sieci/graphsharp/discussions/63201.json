[
  {
    "Id": "214793",
    "ThreadId": "63201",
    "Html": "<p>I've been attempting to get a context menu working and am having difficulty and was wondering if anyone had any example code?&nbsp; The issue is that the highlight is removed when the context menu pops up and I'm having trouble finding the vertex that was right clicked.&nbsp; Should I just use a right click event or use the regular context menu property?&nbsp; The other issue is I need to have the context menu be vertex dependent.&nbsp; I've got about 5 different types of verticies and the context menu will be different based on the vertex clicked.&nbsp; I also need one to work when right clicking the background.</p>\r\n<p>Sorry if this seems stupid, I'm very new to WPF in general.&nbsp; I've got a GraphLayout called EntityGraphLayout that works on a EntityGraph containing Entity objects.&nbsp; I have children types of Entity that I actually use to populate my graphs.&nbsp; The type of each object is what is needed to build the context menu/choose the appropriate context menu.&nbsp; Templates for the objects are choosen using a ContentTemplateSelector.</p>\r\n<p>Any help you can offer would be appreciated.</p>\r\n<p><span style=\"color:#a31515;font-size:x-small\"><span style=\"color:#a31515;font-size:x-small\">\r\n<pre><div style=\"color:Black;background-color:White\"><pre>    &lt;UserControl.Resources&gt;\r\n        &lt;Style TargetType=<span style=\"color:#A31515\">&quot;{x:Type graphsharp:VertexControl}&quot;</span>&gt;\r\n            &lt;Setter Property=<span style=\"color:#A31515\">&quot;Template&quot;</span>&gt;\r\n                &lt;Setter.Value&gt;\r\n                    &lt;ControlTemplate TargetType=<span style=\"color:#A31515\">&quot;{x:Type graphsharp:VertexControl}&quot;</span>&gt;\r\n                        &lt;Border Width=<span style=\"color:#A31515\">&quot;150&quot;</span> Background=<span style=\"color:#A31515\">&quot;White&quot;</span> \r\n\t\t\t\t\t\t\tBorderBrush=<span style=\"color:#A31515\">&quot;{TemplateBinding BorderBrush}&quot;</span> \r\n\t\t\t\t\t\t\tBorderThickness=<span style=\"color:#A31515\">&quot;{TemplateBinding BorderThickness}&quot;</span>\r\n\t\t\t\t\t\t\tCornerRadius=<span style=\"color:#A31515\">&quot;10,10,10,10&quot;</span>\r\n                            DataContext=<span style=\"color:#A31515\">&quot;{TemplateBinding Vertex}&quot;</span>\r\n                            MouseLeftButtonDown=<span style=\"color:#A31515\">&quot;VertexMouseClick&quot;</span>\r\n                            MouseRightButtonDown=<span style=\"color:#A31515\">&quot;VertexRightClick&quot;</span>&gt;\r\n                            &lt;ContentPresenter Content=<span style=\"color:#A31515\">&quot;{Binding}&quot;</span> ContentTemplateSelector=<span style=\"color:#A31515\">&quot;{StaticResource SelectVertexTemplate}&quot;</span>/&gt;\r\n                        &lt;/Border&gt;\r\n                    &lt;/ControlTemplate&gt;\r\n                &lt;/Setter.Value&gt;\r\n            &lt;/Setter&gt;\r\n            &lt;Setter Property=<span style=\"color:#A31515\">&quot;graphsharp:GraphElementBehaviour.HighlightTrigger&quot;</span> Value=<span style=\"color:#A31515\">&quot;{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}&quot;</span>/&gt;\r\n            &lt;Setter Property=<span style=\"color:#A31515\">&quot;BorderBrush&quot;</span> Value=<span style=\"color:#A31515\">&quot;Black&quot;</span>/&gt;\r\n            &lt;Setter Property=<span style=\"color:#A31515\">&quot;BorderThickness&quot;</span> Value=<span style=\"color:#A31515\">&quot;2&quot;</span>/&gt;\r\n            &lt;Style.Triggers&gt;\r\n                &lt;Trigger Property=<span style=\"color:#A31515\">&quot;graphsharp:GraphElementBehaviour.IsHighlighted&quot;</span> Value=<span style=\"color:#A31515\">&quot;True&quot;</span>&gt;\r\n                    &lt;Setter Property=<span style=\"color:#A31515\">&quot;BorderBrush&quot;</span> Value=<span style=\"color:#A31515\">&quot;Green&quot;</span> /&gt;\r\n                &lt;/Trigger&gt;\r\n                &lt;Trigger Property=<span style=\"color:#A31515\">&quot;graphsharp:GraphElementBehaviour.IsSemiHighlighted&quot;</span> Value=<span style=\"color:#A31515\">&quot;True&quot;</span>&gt;\r\n                    &lt;Setter Property=<span style=\"color:#A31515\">&quot;BorderBrush&quot;</span> Value=<span style=\"color:#A31515\">&quot;Green&quot;</span>/&gt;\r\n                &lt;/Trigger&gt;\r\n                &lt;MultiTrigger&gt;\r\n                    &lt;MultiTrigger.Conditions&gt;\r\n                        &lt;Condition Property=<span style=\"color:#A31515\">&quot;graphsharp:GraphElementBehaviour.IsSemiHighlighted&quot;</span> Value=<span style=\"color:#A31515\">&quot;True&quot;</span>/&gt;\r\n                        &lt;Condition Property=<span style=\"color:#A31515\">&quot;graphsharp:GraphElementBehaviour.SemiHighlightInfo&quot;</span> Value=<span style=\"color:#A31515\">&quot;Source&quot;</span>/&gt;\r\n                    &lt;/MultiTrigger.Conditions&gt;\r\n                    &lt;Setter Property=<span style=\"color:#A31515\">&quot;BorderBrush&quot;</span> Value=<span style=\"color:#A31515\">&quot;Red&quot;</span>/&gt;\r\n                &lt;/MultiTrigger&gt;\r\n                &lt;MultiTrigger&gt;\r\n                    &lt;MultiTrigger.Conditions&gt;\r\n                        &lt;Condition Property=<span style=\"color:#A31515\">&quot;graphsharp:GraphElementBehaviour.IsSemiHighlighted&quot;</span> Value=<span style=\"color:#A31515\">&quot;True&quot;</span>/&gt;\r\n                        &lt;Condition Property=<span style=\"color:#A31515\">&quot;graphsharp:GraphElementBehaviour.SemiHighlightInfo&quot;</span> Value=<span style=\"color:#A31515\">&quot;Target&quot;</span>/&gt;\r\n                    &lt;/MultiTrigger.Conditions&gt;\r\n                    &lt;Setter Property=<span style=\"color:#A31515\">&quot;BorderBrush&quot;</span> Value=<span style=\"color:#A31515\">&quot;Blue&quot;</span>/&gt;\r\n                &lt;/MultiTrigger&gt;\r\n            &lt;/Style.Triggers&gt;\r\n        &lt;/Style&gt;\r\n    &lt;/UserControl.Resources&gt;\r\n    \r\n    &lt;Grid Name=<span style=\"color:#A31515\">&quot;gdGraph&quot;</span>&gt;\r\n        &lt;zoom:ZoomControl Name=<span style=\"color:#A31515\">&quot;zctGraph&quot;</span>&gt; &lt;!--ContextMenu=<span style=\"color:#A31515\">&quot;{StaticResource cMenu}&quot;</span>--&gt;\r\n            &lt;Test:EntityGraphLayout x:Name=<span style=\"color:#A31515\">&quot;OrganizationalChart&quot;</span>\r\n                                    Graph=<span style=\"color:#A31515\">&quot;{Binding ElementName=OrgChartWindow,Path=GraphToVisualize}&quot;</span>\r\n                                    AnimationLength=<span style=\"color:#A31515\">&quot;0&quot;</span>\r\n                                    LayoutAlgorithmType=<span style=\"color:#A31515\">&quot;Tree&quot;</span>\r\n                                    OverlapRemovalAlgorithmType=<span style=\"color:#A31515\">&quot;FSA&quot;</span>\r\n                                    HighlightAlgorithmType=<span style=\"color:#A31515\">&quot;Simple&quot;</span>/&gt;\r\n        &lt;/zoom:ZoomControl&gt;\r\n    &lt;/Grid&gt;\r\n\r\n</pre>\r\n</div>\r\n</pre>\r\n</span></span></p>",
    "PostedDate": "2009-07-22T07:48:30.41-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "215134",
    "ThreadId": "63201",
    "Html": "<p>Very fast reply:</p>\r\n<p>you can define the entity vertex clicked by accessing the DataContext property of the border (in your case). Try something like this:</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre>        <span style=\"color:Blue\">private</span> <span style=\"color:Blue\">void</span> vertexTextBlock_MouseDown(<span style=\"color:Blue\">object</span> sender, MouseButtonEventArgs e)\r\n        {\r\n            VertexClicked = sender <span style=\"color:Blue\">as</span> Border;\r\n            EntityVertex ev = VertexClicked.DataContext <span style=\"color:Blue\">as</span> EntityVertex;\r\n        }</pre>\r\n<pre>The you can create your custom ContextMenu based on the vertex clicked int the code behind....</pre>\r\n<pre></pre>\r\n<pre>Now I have to go :(</pre>\r\n<pre></pre>\r\n<pre>Follow us and wait for a complete reply</pre>\r\n<pre></pre>\r\n<pre>sorry</pre>\r\n<pre>badang</pre>\r\n<pre></pre>\r\n<pre>\r\n\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-07-23T00:26:36.333-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "217312",
    "ThreadId": "63201",
    "Html": "<p>I've added a MouseEnter and MouseLeave event to the Border for VertexControl to get/remove the Entity and hold in a private variable on the Window.&nbsp; The thing I was wondering is how do I make it so the highlight is linked to this variable instead of the IsMouseOver?&nbsp; That&nbsp;should fix the Highlight disappearing when the ContextMenu opens.&nbsp; Is there a way to tell Graph# &quot;highlight this vertex&quot; and &quot;stop highlighting this vertex&quot; specifically?</p>\r\n<p>Thanks for the help!!</p>",
    "PostedDate": "2009-07-29T12:02:35.407-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]