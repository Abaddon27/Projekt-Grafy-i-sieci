[
  {
    "Id": "1032014",
    "ThreadId": "440658",
    "Html": "Hello everybody, several days ago I faced a problem that I have to visualize one piece of data as a graph. The project is written on C# and it's a WPF application, so I tried to find a control/library which would be able to help me doing this work, and GraphSharp is the most referred one. Using several simple tutorials that was mentioned on the homepage of this project, I create a data structure (in the way it was described <a href=\"http://www.youtube.com/watch?v=VTbuvkaPGxE\" rel=\"nofollow\">here</a>) that was visualized successfully, but there are questions which couldn't be answered by me so easy because of documentation shortage and my little experience.<br />\n1) How can I highlight elements by mouse click and freeze this highlighting till the next click?<br />\n2) What should I do to divide vertices on classes different in style?<br />\n",
    "PostedDate": "2013-04-17T12:31:27.363-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1032710",
    "ThreadId": "440658",
    "Html": "Hi, you can use SelectedVertex implementation to get mouse-selected vertex,from this thread: <a href=\"https://graphsharp.codeplex.com/discussions/355105\" rel=\"nofollow\">https://graphsharp.codeplex.com/discussions/355105</a>\r<br />\n<br />\nTo manually highlight vertex and all related vertexes, i suppose you can use: <strong>GraphElementBehaviour.SetHighlightTrigger(vertex, true)</strong>\r<br />\n<br />\nTo be able to style vertexes differently, you can use many approaches, for ex. derive new class from VertexControl and add separate template for that class. Or you can assign templates manually based on Vertex property data (which stores your custom vertex).\r<br />\n<br />\nHonestly, in my opinion, Graph# is completely outdated and lacks essential documentation. It is also not very flexible &quot;out-of-the-box&quot;. Right now i'm working on a similar library based on Graph# algorithms and i hope i can share it with the community soon.<br />\n",
    "PostedDate": "2013-04-18T14:38:01.807-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]