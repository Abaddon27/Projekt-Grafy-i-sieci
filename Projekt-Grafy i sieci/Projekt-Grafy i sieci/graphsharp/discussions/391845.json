[
  {
    "Id": "899855",
    "ThreadId": "391845",
    "Html": "\r\n<p>First of all. I am using only Graph# assembly, which performs layout calculations.<br>\r\nTo be more exact only efficent Sugiyama layout is point of my interest.<br>\r\nMy Project is written using win forms so having layout calculated I draw graph using my own control which I can customize any way I want.</p>\r\n<p>Closer to the topic. Sugiyama algo has Traditional and Orthogonal ways to layout\r\n<span id=\"result_box\" lang=\"en\"><span>respectively.<br>\r\nI am using Grahp# to calculate layout for DCGs which represent program control flow - aka CFG.<br>\r\nThat is why point of interest to me is only orthogonal layout.<br>\r\n<br>\r\nNow, when I have layout calculated I see, that may edges are merged together. For example three edges from different sources to one target. As I have edges of different types with different colors that becomes real mess.</span></span></p>\r\n<p><span lang=\"en\"><span>Is there any way to disable edge merging while calculating orthogonal layout using efficient Sugiyama algo.<br>\r\n<br>\r\nAs an example of the result I am trying to </span></span>achieve<span lang=\"en\"></span> I can mention IDA disassembler CFGs.</p>\r\n",
    "PostedDate": "2012-08-16T03:42:53.22-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "904993",
    "ThreadId": "391845",
    "Html": "<p>I looked through the code of efficient Sugiyama layout algorithm. <br />Seems that there is no way to layout as I wanted.<br />I will try to create a post process function for additional edge routing that runs based on result of<br />orthogonal layout. Google told me that Kandinsky approach is what I am trying to achieve.<br />Anyhow I hope I will be able to cope with this by my self. Though I dont have this confidence.<br /><span class=\"st\"><em></em></span>Any news about planning to implement such edge routing in Graph#?<br /><br />Thanks.<br /><br /></p>",
    "PostedDate": "2012-08-28T02:38:30.987-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]