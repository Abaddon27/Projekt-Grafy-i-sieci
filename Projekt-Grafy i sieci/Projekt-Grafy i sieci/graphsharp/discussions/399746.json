[
  {
    "Id": "928057",
    "ThreadId": "399746",
    "Html": "\r\n<p>What I want to accomplish is to make a custom graph design, specifying where nodes are drawn in the graph based on some of their properties.</p>\r\n<p>My first Idea for an approach is to either create my own LayoutALgorithmType that behaves as per my wishes or to somehow be able to modify the position for nodes within the graph manually thus creationg my own method for assigning positions for the graph\r\n nodes.</p>\r\n<p>I have tried some googeling and some minor trial and error as well using samples from the source code but have so far been unsucessfull in any of my two ideas.</p>\r\n<p>I would greatly appriciate any pointers on how to set positions for nodes or if anyone has some code examples for LayoutALgorithmTypes that would also be greatly apprieciated!</p>\r\n<p>&nbsp;</p>\r\n<p>Sincerely, Linus Karlsson</p>\r\n",
    "PostedDate": "2012-10-17T07:30:22.9-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1060553",
    "ThreadId": "399746",
    "Html": "Any updates on this? I need to do something similar.\r<br />\n<br />\nUnfortunately, I didn't find any answer on all the different question related with this topic. Is there someone providing support on Graph#?\r<br />\n<br />\nThanks,\r<br />\nEzequiel<br />\n",
    "PostedDate": "2013-06-24T13:01:28.723-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1060560",
    "ThreadId": "399746",
    "Html": "Its been a while since I used graph#. Almost as much time as it has bin since I posted my original question. I do remeber somewhat solving the problem though =)\r<br />\n<br />\nWhat I ended up doing was som happy hacking using parts of the solution provided by someone on this site for labeling the lines in the graph. What you have to do is first draw the graph and then you should get the drawn object in the layout and get/set its positions. I am sorry that i dont rember exactly how to do this( and since I am no longer working for the company for which I provided that particlar code I cant check it either). \r<br />\n<br />\nBut somthing along the lines of &quot;canvas get position&quot; can be used. But I would advise to check on the nodelabeling and then google get position of objects in theview model.\r<br />\n<br />\nIn my solution I first set up the graph, and the looped through it to get/set positions of the nodes that I wanted to move.\r<br />\n<br />\nI really hope this helps! <br />\n",
    "PostedDate": "2013-06-24T13:19:54.64-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1060683",
    "ThreadId": "399746",
    "Html": "Hi! You can manually add VertexControls into the layout and then use <strong>GraphCanvas.SetX</strong> and <strong>GraphCanvas.SetY</strong> methods.<br />\nAlso let me advice you to check the <a href=\"http://graphx.codeplex.com\" rel=\"nofollow\">http://graphx.codeplex.com</a> as this is successor of Graph# and supports custom algorithm layouts easily along with the many other features graph# doesn't.<br />\n",
    "PostedDate": "2013-06-24T21:11:41.93-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1061027",
    "ThreadId": "399746",
    "Html": "Thanks both for your answers. I'll take a look at the algorithm Lincarte explains and also to GraphX.\r<br />\n<br />\nI appreciate it!\r<br />\nEzequiel <br />\n",
    "PostedDate": "2013-06-25T10:47:09.45-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]