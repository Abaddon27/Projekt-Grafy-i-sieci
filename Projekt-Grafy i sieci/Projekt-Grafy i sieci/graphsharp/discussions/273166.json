[
  {
    "Id": "674089",
    "ThreadId": "273166",
    "Html": "\r\n<p>Hi there,</p>\r\n<p>I've been using Graph# for a year or so and really like it.</p>\r\n<p>However I now have a graph of some 19000 nodes and 70k edges.</p>\r\n<p>I load the graph but even on a circle layout it spins for &gt;20min before i run out of memory</p>\r\n<p><strong>I wonder what is the largest graph you have visualised? Do you have tips for visualising large graphs?</strong></p>\r\n",
    "PostedDate": "2011-09-20T02:25:03.457-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "685145",
    "ThreadId": "273166",
    "Html": "<p>I have never visualized such a big graph with Graph#. And I think there isn't any sense to visualize every vertex of such a big graph (you won't see nothing).</p>\n<p>In those cases I think the best solution is to clusterize your graph (group the vertices, make some of them appear as one vertex) so in the graph overview, you can show some \"big picture\" with limited number of vertices. When user zooms in, you make smaller vertex groups/clusters so zoomed part of the graph can be viewed in a much detailed way (showing/laying&nbsp;out&nbsp;only the vertices appering in the view box).</p>\n<p>Just like map applications (Google Maps, Bing Maps, ...). In the global view you don't see the street labels (it does&nbsp;not have any sense), but when you zoom in, you can see very detailed information (more vertices, smaller vertex groups) from a little area (limited number of vertices).</p>\n<p>Anyway, Graph# does not supports these usage modes now (and I can't say any timeframe).</p>",
    "PostedDate": "2011-10-17T04:53:17.397-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]