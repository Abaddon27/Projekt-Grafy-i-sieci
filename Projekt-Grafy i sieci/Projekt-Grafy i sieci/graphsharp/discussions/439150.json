[
  {
    "Id": "1025680",
    "ThreadId": "439150",
    "Html": "Where can I find more information on what the various layout and overlap removal algorithms are based on, preferably the original scientific articles outlining them?<br />\n<br />\nThe Fruchterman-Reingold and Kamada-Kawai Algorithms were easy enough to find, considering they're named after the authors of the scientific articles and both are referenced on the <a href=\"http://en.wikipedia.org/wiki/Force-directed_graph_drawing\" rel=\"nofollow\">Force-Directed Graph Drawing Wikipedia Page</a>.<br />\nThe same goes for the Sugiyama Algorithm, which has an entire <a href=\"http://en.wikipedia.org/wiki/Layered_graph_drawing\" rel=\"nofollow\">Wikipedia page</a> dedicated to it.<br />\n<br />\nHowever, the other algorithms have more generic names that are harder to go by, and I'd really appreciate it if their original code writer or someone knowledgeable on them could give me some basis behind each of them, either a specific scientific publication that originated them, or a website describing the algorithm if it's a generalized paradigm that was established by a series of scientists.  I've already linked the few I've managed to find, and I'll update this post if I manage to find any more of them, but I really hope others can help.<br />\n<br />\nCompound:<br />\n<ul>\n<li>\nCompound Force-Directed (A combination of some of the other force-directed algorithms?)<br />\n</li>\n</ul>\nContextual:<br />\n<ul>\n<li>Double Tree</li>\n<li>\nRadial Tree<br />\n</li>\n</ul>\nForce-Directed:<br />\n<ul>\n<li><a href=\"http://dx.doi.org/10.1002%2Fspe.4380211102\" rel=\"nofollow\">Fruchterman-Reingold</a> (Can also be viewed <a href=\"http://pdf.aminer.org/001/074/051/graph_drawing_by_force_directed_placement.pdf\" rel=\"nofollow\">here</a>.)</li>\n<li><a href=\"http://dx.doi.org/10.1016%2F0020-0190%2889%2990102-6\" rel=\"nofollow\">Kamada-Kawai</a></li>\n<li><a href=\"http://www.csse.monash.edu.au/~berndm/ISOM/\" rel=\"nofollow\">ISOM</a> (Probably copied from <a href=\"http://chianti.ucsd.edu/svn/coreplugins/branches/Cyto-2.7.x_release_branch/AutomaticLayout/src/csplugins/layout/algorithms/graphPartition/ISOMLayout.java\" rel=\"nofollow\">Cytoscape</a>, or from Cytoscape's source for the algorithm, <a href=\"http://jung.sourceforge.net/doc/api/edu/uci/ics/jung/algorithms/layout/ISOMLayout.html\" rel=\"nofollow\">JUNG</a> )</li>\n<li>\n<a href=\"https://code.google.com/p/linloglayout/source/browse/trunk/src/MinimizerBarnesHut.java\" rel=\"nofollow\">LinLog</a> (Almost a verbatim copy of the Java code for the Barnes-Hut energy minimization algorithm)<br />\n</li>\n</ul>\nSimple:<br />\n<ul>\n<li>Circular</li>\n<li>Efficient Sugiyama (Cited on the <a href=\"http://en.wikipedia.org/wiki/Layered_graph_drawing\" rel=\"nofollow\">Wikipedia page</a>?)</li>\n<li>Sugiyama (Cited on the <a href=\"http://en.wikipedia.org/wiki/Layered_graph_drawing\" rel=\"nofollow\">Wikipedia page</a>?)</li>\n<li>Balloon Tree</li>\n<li>\nSimple Tree<br />\n</li>\n</ul>\nOverlap Removal:<br />\n<ul>\n<li>Force-Scan</li>\n<li>\nOne Way Force-Scan<br />\n</li>\n</ul>\nI'm asking about this because I'm doing research on these graph layout drawing algorithms for a project of my own and I'd really appreciate any help I can get on finding resources outlining them and how they work.  Thanks in advance! :)<br />\n",
    "PostedDate": "2013-04-04T14:07:28.907-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]