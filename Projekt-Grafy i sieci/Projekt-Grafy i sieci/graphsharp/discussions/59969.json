[
  {
    "Id": "203006",
    "ThreadId": "59969",
    "Html": "<p>Is there anyway to change the layout animation?</p>\r\n<p>The animation is doing odd things. It seems to animate from the old layout to the new layout, then it suddenly jumps back to the old layout and fades in to the new layout again.</p>\r\n<p>I cant seem to find where the animation is defined, could you please point me to the file or explain how to override it.</p>\r\n<p>&nbsp;</p>\r\n<p>Thanks,</p>\r\n<p>Kelly</p>",
    "PostedDate": "2009-06-18T09:52:45.97-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "203060",
    "ThreadId": "59969",
    "Html": "<p>You can change the CreationTransition, MoveAnimation and DesctructionTransition properties of the GraphLayout control in order to change the animation behaviour.</p>\r\n<p>To implement your own transition/animation just implement the GraphSharp.Controls.IAnimation and GraphSharp.Controls.ITransition interfaces. You can see some example for these implementations here:</p>\r\n<p><a title=SimpleMoveAnimation href=\"http://graphsharp.codeplex.com/sourcecontrol/changeset/view/25157?projectName=graphsharp#529186\">http://graphsharp.codeplex.com/sourcecontrol/changeset/view/25157?projectName=graphsharp#529186</a></p>\r\n<p><a href=\"http://graphsharp.codeplex.com/sourcecontrol/changeset/view/25157?projectName=graphsharp#529170\">http://graphsharp.codeplex.com/sourcecontrol/changeset/view/25157?projectName=graphsharp#529170</a></p>",
    "PostedDate": "2009-06-18T12:19:10.7-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "724859",
    "ThreadId": "59969",
    "Html": "<p>Here is how I solved this particular problem, given what palesz suggested.</p>\r\n<p>I created two new subclasses of GraphSharp.Controls.FadeTransition, one for fading in and one for fading out:</p>\r\n<p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: blue;\">public</span> <span style=\"color: blue;\">class</span> FastFadeOutTransition : FadeTransition\r\n{\r\n\t<span style=\"color: blue;\">public</span> FastFadeOutTransition()\r\n\t\t: <span style=\"color: blue;\">base</span>( 1.0, 0.0, 1 )\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\n<span style=\"color: blue;\">public</span> <span style=\"color: blue;\">class</span> FastFadeInTransition : FadeTransition\r\n{\r\n\t<span style=\"color: blue;\">public</span> FastFadeInTransition()\r\n\t\t: <span style=\"color: blue;\">base</span>( 0.0, 1.0, 1 )\r\n\t{\r\n\r\n\t}\r\n}\r\n</pre>\r\n</div>\r\n</p>\r\n<p>Notice how they look similar to the existing FadeInTransition and FadeOutTransition classes in the GraphSharp.Controls source code. The added '1' in the constructor is what gets rid of the strange fading. If that's left blank, or set to anything greater than 1, that's when it freaks out.</p>\r\n<p>Now we need to create instances of these classes in our XAML's resources section:</p>\r\n<p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">Window.Resources</span><span style=\"color: blue;\">&gt;</span>\r\n    <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">ResourceDictionary</span><span style=\"color: blue;\">&gt;</span>\r\n        <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">local</span><span style=\"color: blue;\">:</span><span style=\"color: #a31515;\">FastFadeInTransition</span> <span style=\"color: red;\">x:Key</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">fastFadeInTransition</span><span style=\"color: black;\">\" </span><span style=\"color: blue;\">/&gt;</span>\r\n        <span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">local</span><span style=\"color: blue;\">:</span><span style=\"color: #a31515;\">FastFadeOutTransition</span> <span style=\"color: red;\">x:Key</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">fastFadeOutTransition</span><span style=\"color: black;\">\" </span><span style=\"color: blue;\">/&gt;</span>\r\n    <span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">ResourceDictionary</span><span style=\"color: blue;\">&gt;</span>\r\n<span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">Window.Resources</span><span style=\"color: blue;\">&gt;</span>\r\n</pre>\r\n</div>\r\n</p>\r\n<p>Finally, we need to tell XAML to use these transitions in our&nbsp;GraphLayout control:</p>\r\n<p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">local</span><span style=\"color: blue;\">:</span><span style=\"color: #a31515;\">MyGraphLayout</span>\r\n    <span style=\"color: red;\">...</span>\r\n    <span style=\"color: red;\">CreationTransition</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{Binding Source={StaticResource fastFadeInTransition}}</span><span style=\"color: black;\">\"</span>\r\n    <span style=\"color: red;\">DestructionTransition</span><span style=\"color: blue;\">=</span><span style=\"color: black;\">\"</span><span style=\"color: blue;\">{Binding Source={StaticResource fastFadeOutTransition}}</span><span style=\"color: black;\">\"</span> <span style=\"color: blue;\">/&gt;</span>\r\n</pre>\r\n</div>\r\nThat's it! Try it out. It should hopefully look the way you expect it to. Otherwise, you can create your own transition classes as palesz said.</p>",
    "PostedDate": "2012-01-13T09:26:51.217-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "724860",
    "ThreadId": "59969",
    "Html": "<p>[Accidentally double-posted]</p>",
    "PostedDate": "2012-01-13T09:26:51.253-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]