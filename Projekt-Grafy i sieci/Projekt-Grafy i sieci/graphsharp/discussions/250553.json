[
  {
    "Id": "583824",
    "ThreadId": "250553",
    "Html": "\r\n<p>Hello, everybody.<br>\r\nFirst, thank you for such a good control!<br>\r\n<br>\r\nMy aim is to create an App for constructing Artificial Neural Network. I've searched a lot and I think Qgraph and G# are the best way to visualize network.<br>\r\nI want to create drug and drop support for creating network element (there will be icons with different types of neurons and i want users to grag them to&nbsp;GraphLayout Control)&nbsp;</p>\r\n<p>can anyone help me with this? some code example will be enough!</p>\r\n",
    "PostedDate": "2011-03-21T09:45:11.71-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "592875",
    "ThreadId": "250553",
    "Html": "<p>problem solved!</p>",
    "PostedDate": "2011-04-06T08:51:20.643-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "622104",
    "ThreadId": "250553",
    "Html": "<p>How did you do it? Can you share some code?</p>",
    "PostedDate": "2011-06-02T11:29:21.33-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "630213",
    "ThreadId": "250553",
    "Html": "<p>yes, of course!</p>\n<p>here I define what kind of neuron is dragged (example is for imAddRec - receptor image):</p>\n<p>\n<pre>private void imAddRec_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)\n        {\n            mousePressedOnRec = true;\n        }\n\n        private void imAddRec_MouseLeave(object sender, System.Windows.Input.MouseEventArgs e)\n        {\n            if (mousePressedOnRec &amp;&amp; e.LeftButton == MouseButtonState.Pressed)\n            {\n                System.Windows.DataObject d = new System.Windows.DataObject();\n                d.SetData(System.Windows.DataFormats.StringFormat, \"receptor\", false);\n                DragDrop.DoDragDrop(imAddRec, d, System.Windows.DragDropEffects.Move);\n            }\n            mousePressedOnRec = false;\n        }\n</pre>\n</p>\n<p><span style=\"font-family: Consolas, 'Courier New', Courier, monospace; white-space: pre;\">Drop event on GraphLayout:</span></p>\n<div style=\"color: black; background-color: white;\">\n<pre><div style=\"color: black; background-color: white;\"><pre><span style=\"color: blue;\">private</span> <span style=\"color: blue;\">void</span> graphLayout_Drop(<span style=\"color: blue;\">object</span> sender, System.Windows.DragEventArgs e)\n        {            \n            <span style=\"color: blue;\">var</span> type = <span style=\"color: blue;\">new</span> <span style=\"color: blue;\">object</span>();\n            <span style=\"color: blue;\">if</span> (e.Data.GetDataPresent(System.Windows.DataFormats.StringFormat))\n                type = e.Data.GetData(System.Windows.DataFormats.StringFormat, <span style=\"color: blue;\">false</span>);\n            <span style=\"color: blue;\">else</span>\n                <span style=\"color: blue;\">return</span>;\n            \n            <span style=\"color: blue;\">switch</span> (type.ToString())\n            {\n                <span style=\"color: blue;\">case</span> <span style=\"color: #a31515;\">\"receptor\"</span>:\n                    {\n                        AddReceptor();\n                        <span style=\"color: blue;\">break</span>;\n                    }\n                <span style=\"color: blue;\">case</span> <span style=\"color: #a31515;\">\"recn\"</span>:\n                    {\n                        AddNeuronToRecZone();\n                        <span style=\"color: blue;\">break</span>;\n                    }\n                <span style=\"color: blue;\">case</span> <span style=\"color: #a31515;\">\"effn\"</span>:\n                    {\n                        AddNeuronToEffZone();\n                        <span style=\"color: blue;\">break</span>;\n                    }\n                <span style=\"color: blue;\">case</span> <span style=\"color: #a31515;\">\"effector\"</span>:\n                    {\n                        AddEffector();\n                        <span style=\"color: blue;\">break</span>;\n                    }\n            }\n        }\n</pre>\n</div>\n<br /></pre>\n</div>",
    "PostedDate": "2011-06-20T12:23:52.957-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "630366",
    "ThreadId": "250553",
    "Html": "<p>Thanks</p>",
    "PostedDate": "2011-06-20T22:30:21.25-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]