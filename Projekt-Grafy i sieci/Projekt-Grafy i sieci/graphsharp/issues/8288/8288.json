{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": null,
    "Description": "## Improvement\r\n`GraphLayout.CancelLayout()` should call `LayoutAlgorithm.Abort()`.\r\n\r\n## Rationale\r\nCurrently, calling `CancelLayout()` doesn't do anything when the layout is being computed asynchronously. A portion of execution time in `GraphLayout.Layout(bool)` is spent on `argument.algorithm.Compute();` (~line 266). Calling `LayoutAlgorithm.Abort()` will allows us to break out of that step.\r\n\r\n## Note\r\nI intend to fork and implement this feature myself but I created this issue in case someone else can get to it before me.",
    "LastUpdatedDate": "2013-04-26T07:08:10.983-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "graphsharp",
    "ReportedDate": "2013-04-26T07:08:10.983-07:00",
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Improvement: CancelLayout should abort the layout computation",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 8288
  },
  "FileAttachments": [],
  "Comments": []
}